Nonterminals useless in grammar

   RETURN_STATMENT
   COMPUND_STATMENT


Rules useless in grammar

   93 RETURN_STATMENT: RETURN EXPRASION ';'

   94 COMPUND_STATMENT: '{' INNER_COMPUND_STATMENT RETURN_STATMENT '}'
   95                 | '{' RETURN_STATMENT '}'


State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 127 conflicts: 12 shift/reduce


Grammar

    0 $accept: S $end

    1 S: FUNC_PROC_DEC

    2 FUNC_PROC_DEC: DEF_A
    3              | FUNC_PROC_DEC DEF_A

    4 DEF_A: FUNC_DEF
    5      | PROC_DEF

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK

    8 ARGES: '(' ')'
    9      | '(' OUT_ARGES ')'

   10 OUT_ARGES: INNER_ARGS ':' TYPE
   11          | INNER_ARGS ':' TYPE ';' OUT_ARGES

   12 INNER_ARGS: ID
   13           | ID ',' INNER_ARGS

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}'
   15           | '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

   16 EXPRASION: CONST
   17          | '(' EXPRASION ')'
   18          | ID
   19          | '^' EXPRASION
   20          | '&' EXPRASION
   21          | '-' EXPRASION
   22          | '!' EXPRASION
   23          | ADDR_ID '=' VALUE
   24          | ID '[' EXPRASION ']' '=' VALUE
   25          | ID '[' EXPRASION ']'
   26          | ID '=' EXPRASION
   27          | EXPRASION NE_OP VALUE
   28          | EXPRASION AND_OP VALUE
   29          | EXPRASION OR_OP VALUE
   30          | EXPRASION '+' VALUE
   31          | EXPRASION '-' VALUE
   32          | EXPRASION '/' VALUE
   33          | EXPRASION '*' VALUE
   34          | EXPRASION EQL_OP VALUE
   35          | EXPRASION GE_OP VALUE
   36          | EXPRASION SE_OP VALUE
   37          | EXPRASION '>' VALUE
   38          | EXPRASION '<' VALUE
   39          | FUNC_ACTIVE
   40          | '|' EXPRASION '|'

   41 VALUE: ID '[' EXPRASION ']'
   42      | CONST
   43      | '(' EXPRASION ')'
   44      | TRUE
   45      | FALSE
   46      | ID
   47      | FUNC_ACTIVE
   48      | '|' VALUE '|'
   49      | '^' VALUE
   50      | '&' VALUE
   51      | '-' VALUE
   52      | '!' VALUE

   53 FUNC_ACTIVE: ID '(' ')'
   54            | ID '(' FUNC_ACTIVE_INNER_ARGES ')'

   55 FUNC_ACTIVE_INNER_ARGES: EXPRASION
   56                        | EXPRASION ',' FUNC_ACTIVE_INNER_ARGES

   57 STASTMENT_LIST: STASTMENT_LIST STASTMENT
   58               | STASTMENT

   59 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   60             | IF '(' EXPRASION ')' STASTMENT

   61 STASTMENT: COMPUND_STATMENT_PROC
   62          | EXPRASION ';'
   63          | IF_STASTMENT
   64          | LOOP_STATMENT

   65 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT
   66              | FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

   67 COMPUND_STATMENT_PROC: '{' '}'
   68                      | '{' INNER_COMPUND_STATMENT '}'

   69 INNER_COMPUND_STATMENT: STASTMENT_LIST
   70                       | DEC_INNER_BLOCK
   71                       | DEC_INNER_BLOCK STASTMENT_LIST

   72 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK
   73                | NEW_DECLARE

   74 NEW_DECLARE: VF
   75            | DEF_A

   76 VF: VAR VFDEC

   77 VFDEC: INNER_ARGS ':' TYPE ';'

   78 CONST: INT_NUM
   79      | R_NUM
   80      | HEX_NUM
   81      | NULLA
   82      | CHAR_VALUE
   83      | STRING_VALUE
   84      | BOOL_VAL

   85 TYPE: STRING '[' INT_NUM ']'
   86     | BOOL
   87     | INT
   88     | REAL
   89     | CHAR
   90     | CHAR_POINTER
   91     | REAL_POINTER
   92     | INT_POINTER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 22 52
'&' (38) 20 50
'(' (40) 8 9 17 43 53 54 59 60 65 66
')' (41) 8 9 17 43 53 54 59 60 65 66
'*' (42) 33
'+' (43) 30
',' (44) 13 56
'-' (45) 21 31 51
'/' (47) 32
':' (58) 10 11 77
';' (59) 11 14 15 62 66 77
'<' (60) 38
'=' (61) 23 24 26
'>' (62) 37
'[' (91) 24 25 41 85
']' (93) 24 25 41 85
'^' (94) 19 49
'{' (123) 14 15 67 68
'|' (124) 40 48
'}' (125) 14 15 67 68
error (256)
CHAR (258) 89
REAL (259) 88
INT (260) 87
BOOL (261) 86
STRING (262) 85
CHAR_POINTER (263) 90
REAL_POINTER (264) 91
INT_POINTER (265) 92
NULLA (266) 81
ELSE (267) 59
IF (268) 59 60
FOR (269) 66
WHILE (270) 65
TRUE (271) 44
FALSE (272) 45
RETURN (273) 7 14 15
VAR (274) 76
FUNC (275) 7
PROC (276) 6
ADDR_ID (277) 23
AND_OP (278) 28
GE_OP (279) 35
SE_OP (280) 36
NE_OP (281) 27
OR_OP (282) 29
EQL_OP (283) 34
CHAR_VALUE (284) 82
STRING_VALUE (285) 83
INT_NUM (286) 78 85
R_NUM (287) 79
HEX_NUM (288) 80
ID (289) 6 7 12 13 18 24 25 26 41 46 53 54
BOOL_VAL (290) 84
IFX (291)
UMINUS (292)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
S (59)
    on left: 1, on right: 0
FUNC_PROC_DEC (60)
    on left: 2 3, on right: 1 3
DEF_A (61)
    on left: 4 5, on right: 2 3 75
PROC_DEF (62)
    on left: 6, on right: 5
FUNC_DEF (63)
    on left: 7, on right: 4
ARGES (64)
    on left: 8 9, on right: 6 7
OUT_ARGES (65)
    on left: 10 11, on right: 9 11
INNER_ARGS (66)
    on left: 12 13, on right: 10 11 13 77
FUNC_BLOCK (67)
    on left: 14 15, on right: 7
EXPRASION (68)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37 38 39 40, on right: 14 15 17 19 20 21 22 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 40 41 43 55 56 59 60 62 65 66
VALUE (69)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52, on right: 23 24 27
    28 29 30 31 32 33 34 35 36 37 38 48 49 50 51 52
FUNC_ACTIVE (70)
    on left: 53 54, on right: 39 47
FUNC_ACTIVE_INNER_ARGES (71)
    on left: 55 56, on right: 54 56
STASTMENT_LIST (72)
    on left: 57 58, on right: 57 69 71
IF_STASTMENT (73)
    on left: 59 60, on right: 63
STASTMENT (74)
    on left: 61 62 63 64, on right: 57 58 59 60 65 66
LOOP_STATMENT (75)
    on left: 65 66, on right: 64
COMPUND_STATMENT_PROC (76)
    on left: 67 68, on right: 6 61
INNER_COMPUND_STATMENT (77)
    on left: 69 70 71, on right: 15 68
DEC_INNER_BLOCK (78)
    on left: 72 73, on right: 70 71 72
NEW_DECLARE (79)
    on left: 74 75, on right: 72 73
VF (80)
    on left: 76, on right: 74
VFDEC (81)
    on left: 77, on right: 76
CONST (82)
    on left: 78 79 80 81 82 83 84, on right: 16 42
TYPE (83)
    on left: 85 86 87 88 89 90 91 92, on right: 7 10 11 77


State 0

    0 $accept: . S $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    S              go to state 3
    FUNC_PROC_DEC  go to state 4
    DEF_A          go to state 5
    PROC_DEF       go to state 6
    FUNC_DEF       go to state 7


State 1

    7 FUNC_DEF: FUNC . ID ARGES RETURN TYPE FUNC_BLOCK

    ID  shift, and go to state 8


State 2

    6 PROC_DEF: PROC . ID ARGES COMPUND_STATMENT_PROC

    ID  shift, and go to state 9


State 3

    0 $accept: S . $end

    $end  shift, and go to state 10


State 4

    1 S: FUNC_PROC_DEC .
    3 FUNC_PROC_DEC: FUNC_PROC_DEC . DEF_A

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 1 (S)

    DEF_A     go to state 11
    PROC_DEF  go to state 6
    FUNC_DEF  go to state 7


State 5

    2 FUNC_PROC_DEC: DEF_A .

    $default  reduce using rule 2 (FUNC_PROC_DEC)


State 6

    5 DEF_A: PROC_DEF .

    $default  reduce using rule 5 (DEF_A)


State 7

    4 DEF_A: FUNC_DEF .

    $default  reduce using rule 4 (DEF_A)


State 8

    7 FUNC_DEF: FUNC ID . ARGES RETURN TYPE FUNC_BLOCK

    '('  shift, and go to state 12

    ARGES  go to state 13


State 9

    6 PROC_DEF: PROC ID . ARGES COMPUND_STATMENT_PROC

    '('  shift, and go to state 12

    ARGES  go to state 14


State 10

    0 $accept: S $end .

    $default  accept


State 11

    3 FUNC_PROC_DEC: FUNC_PROC_DEC DEF_A .

    $default  reduce using rule 3 (FUNC_PROC_DEC)


State 12

    8 ARGES: '(' . ')'
    9      | '(' . OUT_ARGES ')'

    ID   shift, and go to state 15
    ')'  shift, and go to state 16

    OUT_ARGES   go to state 17
    INNER_ARGS  go to state 18


State 13

    7 FUNC_DEF: FUNC ID ARGES . RETURN TYPE FUNC_BLOCK

    RETURN  shift, and go to state 19


State 14

    6 PROC_DEF: PROC ID ARGES . COMPUND_STATMENT_PROC

    '{'  shift, and go to state 20

    COMPUND_STATMENT_PROC  go to state 21


State 15

   12 INNER_ARGS: ID .
   13           | ID . ',' INNER_ARGS

    ','  shift, and go to state 22

    $default  reduce using rule 12 (INNER_ARGS)


State 16

    8 ARGES: '(' ')' .

    $default  reduce using rule 8 (ARGES)


State 17

    9 ARGES: '(' OUT_ARGES . ')'

    ')'  shift, and go to state 23


State 18

   10 OUT_ARGES: INNER_ARGS . ':' TYPE
   11          | INNER_ARGS . ':' TYPE ';' OUT_ARGES

    ':'  shift, and go to state 24


State 19

    7 FUNC_DEF: FUNC ID ARGES RETURN . TYPE FUNC_BLOCK

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 33


State 20

   67 COMPUND_STATMENT_PROC: '{' . '}'
   68                      | '{' . INNER_COMPUND_STATMENT '}'

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    VAR           shift, and go to state 38
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '}'           shift, and go to state 52
    '|'           shift, and go to state 53

    DEF_A                   go to state 54
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 55
    FUNC_ACTIVE             go to state 56
    STASTMENT_LIST          go to state 57
    IF_STASTMENT            go to state 58
    STASTMENT               go to state 59
    LOOP_STATMENT           go to state 60
    COMPUND_STATMENT_PROC   go to state 61
    INNER_COMPUND_STATMENT  go to state 62
    DEC_INNER_BLOCK         go to state 63
    NEW_DECLARE             go to state 64
    VF                      go to state 65
    CONST                   go to state 66


State 21

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC .

    $default  reduce using rule 6 (PROC_DEF)


State 22

   13 INNER_ARGS: ID ',' . INNER_ARGS

    ID  shift, and go to state 15

    INNER_ARGS  go to state 67


State 23

    9 ARGES: '(' OUT_ARGES ')' .

    $default  reduce using rule 9 (ARGES)


State 24

   10 OUT_ARGES: INNER_ARGS ':' . TYPE
   11          | INNER_ARGS ':' . TYPE ';' OUT_ARGES

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 68


State 25

   89 TYPE: CHAR .

    $default  reduce using rule 89 (TYPE)


State 26

   88 TYPE: REAL .

    $default  reduce using rule 88 (TYPE)


State 27

   87 TYPE: INT .

    $default  reduce using rule 87 (TYPE)


State 28

   86 TYPE: BOOL .

    $default  reduce using rule 86 (TYPE)


State 29

   85 TYPE: STRING . '[' INT_NUM ']'

    '['  shift, and go to state 69


State 30

   90 TYPE: CHAR_POINTER .

    $default  reduce using rule 90 (TYPE)


State 31

   91 TYPE: REAL_POINTER .

    $default  reduce using rule 91 (TYPE)


State 32

   92 TYPE: INT_POINTER .

    $default  reduce using rule 92 (TYPE)


State 33

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE . FUNC_BLOCK

    '{'  shift, and go to state 70

    FUNC_BLOCK  go to state 71


State 34

   81 CONST: NULLA .

    $default  reduce using rule 81 (CONST)


State 35

   59 IF_STASTMENT: IF . '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   60             | IF . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 72


State 36

   66 LOOP_STATMENT: FOR . '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

    '('  shift, and go to state 73


State 37

   65 LOOP_STATMENT: WHILE . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 74


State 38

   76 VF: VAR . VFDEC

    ID  shift, and go to state 15

    INNER_ARGS  go to state 75
    VFDEC       go to state 76


State 39

   23 EXPRASION: ADDR_ID . '=' VALUE

    '='  shift, and go to state 77


State 40

   82 CONST: CHAR_VALUE .

    $default  reduce using rule 82 (CONST)


State 41

   83 CONST: STRING_VALUE .

    $default  reduce using rule 83 (CONST)


State 42

   78 CONST: INT_NUM .

    $default  reduce using rule 78 (CONST)


State 43

   79 CONST: R_NUM .

    $default  reduce using rule 79 (CONST)


State 44

   80 CONST: HEX_NUM .

    $default  reduce using rule 80 (CONST)


State 45

   18 EXPRASION: ID .
   24          | ID . '[' EXPRASION ']' '=' VALUE
   25          | ID . '[' EXPRASION ']'
   26          | ID . '=' EXPRASION
   53 FUNC_ACTIVE: ID . '(' ')'
   54            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'

    '('  shift, and go to state 78
    '='  shift, and go to state 79
    '['  shift, and go to state 80

    $default  reduce using rule 18 (EXPRASION)


State 46

   84 CONST: BOOL_VAL .

    $default  reduce using rule 84 (CONST)


State 47

   22 EXPRASION: '!' . EXPRASION

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 81
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 48

   19 EXPRASION: '^' . EXPRASION

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 82
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 49

   20 EXPRASION: '&' . EXPRASION

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 83
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 50

   21 EXPRASION: '-' . EXPRASION

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 84
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 51

   17 EXPRASION: '(' . EXPRASION ')'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 85
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 52

   67 COMPUND_STATMENT_PROC: '{' '}' .

    $default  reduce using rule 67 (COMPUND_STATMENT_PROC)


State 53

   40 EXPRASION: '|' . EXPRASION '|'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 86
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 54

   75 NEW_DECLARE: DEF_A .

    $default  reduce using rule 75 (NEW_DECLARE)


State 55

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   62 STASTMENT: EXPRASION . ';'

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ';'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 56

   39 EXPRASION: FUNC_ACTIVE .

    $default  reduce using rule 39 (EXPRASION)


State 57

   57 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   69 INNER_COMPUND_STATMENT: STASTMENT_LIST .

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    $default  reduce using rule 69 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 100
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 58

   63 STASTMENT: IF_STASTMENT .

    $default  reduce using rule 63 (STASTMENT)


State 59

   58 STASTMENT_LIST: STASTMENT .

    $default  reduce using rule 58 (STASTMENT_LIST)


State 60

   64 STASTMENT: LOOP_STATMENT .

    $default  reduce using rule 64 (STASTMENT)


State 61

   61 STASTMENT: COMPUND_STATMENT_PROC .

    $default  reduce using rule 61 (STASTMENT)


State 62

   68 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT . '}'

    '}'  shift, and go to state 101


State 63

   70 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK .
   71                       | DEC_INNER_BLOCK . STASTMENT_LIST

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    $default  reduce using rule 70 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    STASTMENT_LIST         go to state 102
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 59
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 64

   72 DEC_INNER_BLOCK: NEW_DECLARE . DEC_INNER_BLOCK
   73                | NEW_DECLARE .

    VAR   shift, and go to state 38
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 73 (DEC_INNER_BLOCK)

    DEF_A            go to state 54
    PROC_DEF         go to state 6
    FUNC_DEF         go to state 7
    DEC_INNER_BLOCK  go to state 103
    NEW_DECLARE      go to state 64
    VF               go to state 65


State 65

   74 NEW_DECLARE: VF .

    $default  reduce using rule 74 (NEW_DECLARE)


State 66

   16 EXPRASION: CONST .

    $default  reduce using rule 16 (EXPRASION)


State 67

   13 INNER_ARGS: ID ',' INNER_ARGS .

    $default  reduce using rule 13 (INNER_ARGS)


State 68

   10 OUT_ARGES: INNER_ARGS ':' TYPE .
   11          | INNER_ARGS ':' TYPE . ';' OUT_ARGES

    ';'  shift, and go to state 104

    $default  reduce using rule 10 (OUT_ARGES)


State 69

   85 TYPE: STRING '[' . INT_NUM ']'

    INT_NUM  shift, and go to state 105


State 70

   14 FUNC_BLOCK: '{' . RETURN EXPRASION ';' '}'
   15           | '{' . INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    RETURN        shift, and go to state 106
    VAR           shift, and go to state 38
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    DEF_A                   go to state 54
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 55
    FUNC_ACTIVE             go to state 56
    STASTMENT_LIST          go to state 57
    IF_STASTMENT            go to state 58
    STASTMENT               go to state 59
    LOOP_STATMENT           go to state 60
    COMPUND_STATMENT_PROC   go to state 61
    INNER_COMPUND_STATMENT  go to state 107
    DEC_INNER_BLOCK         go to state 63
    NEW_DECLARE             go to state 64
    VF                      go to state 65
    CONST                   go to state 66


State 71

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK .

    $default  reduce using rule 7 (FUNC_DEF)


State 72

   59 IF_STASTMENT: IF '(' . EXPRASION ')' STASTMENT ELSE STASTMENT
   60             | IF '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 108
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 73

   66 LOOP_STATMENT: FOR '(' . EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 109
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 74

   65 LOOP_STATMENT: WHILE '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 110
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 75

   77 VFDEC: INNER_ARGS . ':' TYPE ';'

    ':'  shift, and go to state 111


State 76

   76 VF: VAR VFDEC .

    $default  reduce using rule 76 (VF)


State 77

   23 EXPRASION: ADDR_ID '=' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 121
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 78

   53 FUNC_ACTIVE: ID '(' . ')'
   54            | ID '(' . FUNC_ACTIVE_INNER_ARGES ')'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    ')'           shift, and go to state 124
    '|'           shift, and go to state 53

    EXPRASION                go to state 125
    FUNC_ACTIVE              go to state 56
    FUNC_ACTIVE_INNER_ARGES  go to state 126
    CONST                    go to state 66


State 79

   26 EXPRASION: ID '=' . EXPRASION

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 127
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 80

   24 EXPRASION: ID '[' . EXPRASION ']' '=' VALUE
   25          | ID '[' . EXPRASION ']'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 128
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 81

   22 EXPRASION: '!' EXPRASION .
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    NE_OP  shift, and go to state 90
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    NE_OP     [reduce using rule 22 (EXPRASION)]
    $default  reduce using rule 22 (EXPRASION)


State 82

   19 EXPRASION: '^' EXPRASION .
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    NE_OP  shift, and go to state 90
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    NE_OP     [reduce using rule 19 (EXPRASION)]
    $default  reduce using rule 19 (EXPRASION)


State 83

   20 EXPRASION: '&' EXPRASION .
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    NE_OP  shift, and go to state 90
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    NE_OP     [reduce using rule 20 (EXPRASION)]
    $default  reduce using rule 20 (EXPRASION)


State 84

   21 EXPRASION: '-' EXPRASION .
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    NE_OP  shift, and go to state 90
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    NE_OP     [reduce using rule 21 (EXPRASION)]
    $default  reduce using rule 21 (EXPRASION)


State 85

   17 EXPRASION: '(' EXPRASION . ')'
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ')'     shift, and go to state 129


State 86

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   40          | '|' EXPRASION . '|'

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    '|'     shift, and go to state 130


State 87

   28 EXPRASION: EXPRASION AND_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 131
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 88

   35 EXPRASION: EXPRASION GE_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 132
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 89

   36 EXPRASION: EXPRASION SE_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 133
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 90

   27 EXPRASION: EXPRASION NE_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 134
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 91

   29 EXPRASION: EXPRASION OR_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 135
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 92

   34 EXPRASION: EXPRASION EQL_OP . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 136
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 93

   37 EXPRASION: EXPRASION '>' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 137
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 94

   38 EXPRASION: EXPRASION '<' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 138
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 95

   62 STASTMENT: EXPRASION ';' .

    $default  reduce using rule 62 (STASTMENT)


State 96

   30 EXPRASION: EXPRASION '+' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 139
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 97

   31 EXPRASION: EXPRASION '-' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 140
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 98

   33 EXPRASION: EXPRASION '*' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 141
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 99

   32 EXPRASION: EXPRASION '/' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 142
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 100

   57 STASTMENT_LIST: STASTMENT_LIST STASTMENT .

    $default  reduce using rule 57 (STASTMENT_LIST)


State 101

   68 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT '}' .

    $default  reduce using rule 68 (COMPUND_STATMENT_PROC)


State 102

   57 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   71 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK STASTMENT_LIST .

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    $default  reduce using rule 71 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 100
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 103

   72 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK .

    $default  reduce using rule 72 (DEC_INNER_BLOCK)


State 104

   11 OUT_ARGES: INNER_ARGS ':' TYPE ';' . OUT_ARGES

    ID  shift, and go to state 15

    OUT_ARGES   go to state 143
    INNER_ARGS  go to state 18


State 105

   85 TYPE: STRING '[' INT_NUM . ']'

    ']'  shift, and go to state 144


State 106

   14 FUNC_BLOCK: '{' RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 145
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 107

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT . RETURN EXPRASION ';' '}'

    RETURN  shift, and go to state 146


State 108

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   59 IF_STASTMENT: IF '(' EXPRASION . ')' STASTMENT ELSE STASTMENT
   60             | IF '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ')'     shift, and go to state 147


State 109

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   66 LOOP_STATMENT: FOR '(' EXPRASION . ';' EXPRASION ';' EXPRASION ')' STASTMENT

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ';'     shift, and go to state 148
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 110

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   65 LOOP_STATMENT: WHILE '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ')'     shift, and go to state 149


State 111

   77 VFDEC: INNER_ARGS ':' . TYPE ';'

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 150


State 112

   44 VALUE: TRUE .

    $default  reduce using rule 44 (VALUE)


State 113

   45 VALUE: FALSE .

    $default  reduce using rule 45 (VALUE)


State 114

   41 VALUE: ID . '[' EXPRASION ']'
   46      | ID .
   53 FUNC_ACTIVE: ID . '(' ')'
   54            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'

    '('  shift, and go to state 78
    '['  shift, and go to state 151

    $default  reduce using rule 46 (VALUE)


State 115

   52 VALUE: '!' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 152
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 116

   49 VALUE: '^' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 153
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 117

   50 VALUE: '&' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 154
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 118

   51 VALUE: '-' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 155
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 119

   43 VALUE: '(' . EXPRASION ')'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 156
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 120

   48 VALUE: '|' . VALUE '|'

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 157
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 121

   23 EXPRASION: ADDR_ID '=' VALUE .

    $default  reduce using rule 23 (EXPRASION)


State 122

   47 VALUE: FUNC_ACTIVE .

    $default  reduce using rule 47 (VALUE)


State 123

   42 VALUE: CONST .

    $default  reduce using rule 42 (VALUE)


State 124

   53 FUNC_ACTIVE: ID '(' ')' .

    $default  reduce using rule 53 (FUNC_ACTIVE)


State 125

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   55 FUNC_ACTIVE_INNER_ARGES: EXPRASION .
   56                        | EXPRASION . ',' FUNC_ACTIVE_INNER_ARGES

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ','     shift, and go to state 158

    $default  reduce using rule 55 (FUNC_ACTIVE_INNER_ARGES)


State 126

   54 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES . ')'

    ')'  shift, and go to state 159


State 127

   26 EXPRASION: ID '=' EXPRASION .
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99

    AND_OP    [reduce using rule 26 (EXPRASION)]
    GE_OP     [reduce using rule 26 (EXPRASION)]
    SE_OP     [reduce using rule 26 (EXPRASION)]
    NE_OP     [reduce using rule 26 (EXPRASION)]
    OR_OP     [reduce using rule 26 (EXPRASION)]
    EQL_OP    [reduce using rule 26 (EXPRASION)]
    '>'       [reduce using rule 26 (EXPRASION)]
    '<'       [reduce using rule 26 (EXPRASION)]
    '+'       [reduce using rule 26 (EXPRASION)]
    '-'       [reduce using rule 26 (EXPRASION)]
    '*'       [reduce using rule 26 (EXPRASION)]
    '/'       [reduce using rule 26 (EXPRASION)]
    $default  reduce using rule 26 (EXPRASION)


State 128

   24 EXPRASION: ID '[' EXPRASION . ']' '=' VALUE
   25          | ID '[' EXPRASION . ']'
   27          | EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ']'     shift, and go to state 160


State 129

   17 EXPRASION: '(' EXPRASION ')' .

    $default  reduce using rule 17 (EXPRASION)


State 130

   40 EXPRASION: '|' EXPRASION '|' .

    $default  reduce using rule 40 (EXPRASION)


State 131

   28 EXPRASION: EXPRASION AND_OP VALUE .

    $default  reduce using rule 28 (EXPRASION)


State 132

   35 EXPRASION: EXPRASION GE_OP VALUE .

    $default  reduce using rule 35 (EXPRASION)


State 133

   36 EXPRASION: EXPRASION SE_OP VALUE .

    $default  reduce using rule 36 (EXPRASION)


State 134

   27 EXPRASION: EXPRASION NE_OP VALUE .

    $default  reduce using rule 27 (EXPRASION)


State 135

   29 EXPRASION: EXPRASION OR_OP VALUE .

    $default  reduce using rule 29 (EXPRASION)


State 136

   34 EXPRASION: EXPRASION EQL_OP VALUE .

    $default  reduce using rule 34 (EXPRASION)


State 137

   37 EXPRASION: EXPRASION '>' VALUE .

    $default  reduce using rule 37 (EXPRASION)


State 138

   38 EXPRASION: EXPRASION '<' VALUE .

    $default  reduce using rule 38 (EXPRASION)


State 139

   30 EXPRASION: EXPRASION '+' VALUE .

    $default  reduce using rule 30 (EXPRASION)


State 140

   31 EXPRASION: EXPRASION '-' VALUE .

    $default  reduce using rule 31 (EXPRASION)


State 141

   33 EXPRASION: EXPRASION '*' VALUE .

    $default  reduce using rule 33 (EXPRASION)


State 142

   32 EXPRASION: EXPRASION '/' VALUE .

    $default  reduce using rule 32 (EXPRASION)


State 143

   11 OUT_ARGES: INNER_ARGS ':' TYPE ';' OUT_ARGES .

    $default  reduce using rule 11 (OUT_ARGES)


State 144

   85 TYPE: STRING '[' INT_NUM ']' .

    $default  reduce using rule 85 (TYPE)


State 145

   14 FUNC_BLOCK: '{' RETURN EXPRASION . ';' '}'
   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ';'     shift, and go to state 161
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 146

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 162
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 147

   59 IF_STASTMENT: IF '(' EXPRASION ')' . STASTMENT ELSE STASTMENT
   60             | IF '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 163
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 148

   66 LOOP_STATMENT: FOR '(' EXPRASION ';' . EXPRASION ';' EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 164
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 149

   65 LOOP_STATMENT: WHILE '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 165
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 150

   77 VFDEC: INNER_ARGS ':' TYPE . ';'

    ';'  shift, and go to state 166


State 151

   41 VALUE: ID '[' . EXPRASION ']'

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 167
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 152

   52 VALUE: '!' VALUE .

    $default  reduce using rule 52 (VALUE)


State 153

   49 VALUE: '^' VALUE .

    $default  reduce using rule 49 (VALUE)


State 154

   50 VALUE: '&' VALUE .

    $default  reduce using rule 50 (VALUE)


State 155

   51 VALUE: '-' VALUE .

    $default  reduce using rule 51 (VALUE)


State 156

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   43 VALUE: '(' EXPRASION . ')'

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ')'     shift, and go to state 168


State 157

   48 VALUE: '|' VALUE . '|'

    '|'  shift, and go to state 169


State 158

   56 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' . FUNC_ACTIVE_INNER_ARGES

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION                go to state 125
    FUNC_ACTIVE              go to state 56
    FUNC_ACTIVE_INNER_ARGES  go to state 170
    CONST                    go to state 66


State 159

   54 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES ')' .

    $default  reduce using rule 54 (FUNC_ACTIVE)


State 160

   24 EXPRASION: ID '[' EXPRASION ']' . '=' VALUE
   25          | ID '[' EXPRASION ']' .

    '='  shift, and go to state 171

    $default  reduce using rule 25 (EXPRASION)


State 161

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 172


State 162

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION . ';' '}'
   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ';'     shift, and go to state 173
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 163

   59 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT . ELSE STASTMENT
   60             | IF '(' EXPRASION ')' STASTMENT .

    ELSE  shift, and go to state 174

    $default  reduce using rule 60 (IF_STASTMENT)


State 164

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   66 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION . ';' EXPRASION ')' STASTMENT

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ';'     shift, and go to state 175
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 165

   65 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT .

    $default  reduce using rule 65 (LOOP_STATMENT)


State 166

   77 VFDEC: INNER_ARGS ':' TYPE ';' .

    $default  reduce using rule 77 (VFDEC)


State 167

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   41 VALUE: ID '[' EXPRASION . ']'

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ']'     shift, and go to state 176


State 168

   43 VALUE: '(' EXPRASION ')' .

    $default  reduce using rule 43 (VALUE)


State 169

   48 VALUE: '|' VALUE '|' .

    $default  reduce using rule 48 (VALUE)


State 170

   56 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' FUNC_ACTIVE_INNER_ARGES .

    $default  reduce using rule 56 (FUNC_ACTIVE_INNER_ARGES)


State 171

   24 EXPRASION: ID '[' EXPRASION ']' '=' . VALUE

    NULLA         shift, and go to state 34
    TRUE          shift, and go to state 112
    FALSE         shift, and go to state 113
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 114
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 115
    '^'           shift, and go to state 116
    '&'           shift, and go to state 117
    '-'           shift, and go to state 118
    '('           shift, and go to state 119
    '|'           shift, and go to state 120

    VALUE        go to state 177
    FUNC_ACTIVE  go to state 122
    CONST        go to state 123


State 172

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}' .

    $default  reduce using rule 14 (FUNC_BLOCK)


State 173

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 178


State 174

   59 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 179
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 175

   66 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '|'           shift, and go to state 53

    EXPRASION    go to state 180
    FUNC_ACTIVE  go to state 56
    CONST        go to state 66


State 176

   41 VALUE: ID '[' EXPRASION ']' .

    $default  reduce using rule 41 (VALUE)


State 177

   24 EXPRASION: ID '[' EXPRASION ']' '=' VALUE .

    $default  reduce using rule 24 (EXPRASION)


State 178

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}' .

    $default  reduce using rule 15 (FUNC_BLOCK)


State 179

   59 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT .

    $default  reduce using rule 59 (IF_STASTMENT)


State 180

   27 EXPRASION: EXPRASION . NE_OP VALUE
   28          | EXPRASION . AND_OP VALUE
   29          | EXPRASION . OR_OP VALUE
   30          | EXPRASION . '+' VALUE
   31          | EXPRASION . '-' VALUE
   32          | EXPRASION . '/' VALUE
   33          | EXPRASION . '*' VALUE
   34          | EXPRASION . EQL_OP VALUE
   35          | EXPRASION . GE_OP VALUE
   36          | EXPRASION . SE_OP VALUE
   37          | EXPRASION . '>' VALUE
   38          | EXPRASION . '<' VALUE
   66 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 87
    GE_OP   shift, and go to state 88
    SE_OP   shift, and go to state 89
    NE_OP   shift, and go to state 90
    OR_OP   shift, and go to state 91
    EQL_OP  shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99
    ')'     shift, and go to state 181


State 181

   66 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    ADDR_ID       shift, and go to state 39
    CHAR_VALUE    shift, and go to state 40
    STRING_VALUE  shift, and go to state 41
    INT_NUM       shift, and go to state 42
    R_NUM         shift, and go to state 43
    HEX_NUM       shift, and go to state 44
    ID            shift, and go to state 45
    BOOL_VAL      shift, and go to state 46
    '!'           shift, and go to state 47
    '^'           shift, and go to state 48
    '&'           shift, and go to state 49
    '-'           shift, and go to state 50
    '('           shift, and go to state 51
    '{'           shift, and go to state 20
    '|'           shift, and go to state 53

    EXPRASION              go to state 55
    FUNC_ACTIVE            go to state 56
    IF_STASTMENT           go to state 58
    STASTMENT              go to state 182
    LOOP_STATMENT          go to state 60
    COMPUND_STATMENT_PROC  go to state 61
    CONST                  go to state 66


State 182

   66 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT .

    $default  reduce using rule 66 (LOOP_STATMENT)
