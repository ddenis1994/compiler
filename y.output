Terminals unused in grammar

   CHAR_POINTER
   REAL_POINTER
   FLOAT_POINTER
   INT_POINTER
   MAIN
   NULL_VALUE
   BOOL_VALUE
   CHAR_VALUE
   STRING_VALUE
   test
   UFUNC


State 5 conflicts: 2 shift/reduce
State 59 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 113 conflicts: 12 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 12 shift/reduce
State 123 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: FUNC_PROC_DEC

    2 FUNC_PROC_DEC: DEF_A
    3              | DEF_A FUNC_PROC_DEC

    4 DEF_A: FUNC_DEF
    5      | PROC_DEF

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK

    8 ARGES: '(' ')'
    9      | '(' OUT_ARGES ')'

   10 OUT_ARGES: INNER_ARGS ':' TYPE OUT_ARGES2

   11 OUT_ARGES2: %empty
   12           | ';' OUT_ARGES

   13 INNER_ARGS: ID
   14           | ID ',' INNER_ARGS

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}'
   16           | '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

   17 EXPRASION: CONST
   18          | '(' EXPRASION ')'
   19          | TRUE
   20          | FALSE
   21          | ID
   22          | '^' EXPRASION
   23          | '&' EXPRASION
   24          | '-' EXPRASION
   25          | '!' EXPRASION
   26          | ID '=' EXPRASION
   27          | EXPRASION NE_OP EXPRASION
   28          | EXPRASION AND_OP EXPRASION
   29          | EXPRASION OR_OP EXPRASION
   30          | EXPRASION '+' EXPRASION
   31          | EXPRASION '-' EXPRASION
   32          | EXPRASION '/' EXPRASION
   33          | EXPRASION '*' EXPRASION
   34          | EXPRASION EQL_OP EXPRASION
   35          | EXPRASION GE_OP EXPRASION
   36          | EXPRASION SE_OP EXPRASION
   37          | EXPRASION '>' EXPRASION
   38          | EXPRASION '<' EXPRASION
   39          | FUNC_ACTIVE

   40 FUNC_ACTIVE: ID '(' ')'
   41            | ID '(' FUNC_ACTIVE_INNER_ARGES ')'

   42 FUNC_ACTIVE_INNER_ARGES: ID
   43                        | CONST
   44                        | ID ',' FUNC_ACTIVE_INNER_ARGES
   45                        | CONST ',' FUNC_ACTIVE_INNER_ARGES

   46 STASTMENT_LIST: STASTMENT_LIST STASTMENT
   47               | STASTMENT

   48 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   49             | IF '(' EXPRASION ')' STASTMENT

   50 STASTMENT: COMPUND_STATMENT
   51          | EXPRASION ';'
   52          | IF_STASTMENT
   53          | LOOP_STATMENT

   54 RETURN_STATMENT: RETURN EXPRASION ';'

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT
   56              | FOR '(' EXPRASION ';' EXPRASION ';' UPDATES ')' STASTMENT

   57 UPDATES: ID '+' '+'
   58        | ID '-' '-'

   59 COMPUND_STATMENT: '{' '}'
   60                 | '{' INNER_COMPUND_STATMENT '}'
   61                 | '{' INNER_COMPUND_STATMENT RETURN_STATMENT '}'
   62                 | '{' RETURN_STATMENT '}'

   63 COMPUND_STATMENT_PROC: '{' '}'
   64                      | '{' INNER_COMPUND_STATMENT '}'

   65 INNER_COMPUND_STATMENT: STASTMENT_LIST
   66                       | DEC_INNER_BLOCK
   67                       | DEC_INNER_BLOCK STASTMENT_LIST

   68 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK
   69                | NEW_DECLARE

   70 NEW_DECLARE: VAR_DECLARE
   71            | FUNC_PROC_DEC

   72 VAR_DECLARE: VF
   73            | VAR_DECLARE VF

   74 VF: VAR INNER_ARGS ':' TYPE ';'

   75 CONST: INT_NUM
   76      | F_NUM

   77 TYPE: STRING '[' INT_NUM ']'
   78     | BOOL
   79     | INT
   80     | FLOAT
   81     | REAL
   82     | CHAR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 25
'&' (38) 23
'(' (40) 8 9 18 40 41 48 49 55 56
')' (41) 8 9 18 40 41 48 49 55 56
'*' (42) 33
'+' (43) 30 57
',' (44) 14 44 45
'-' (45) 24 31 58
'/' (47) 32
':' (58) 10 74
';' (59) 12 15 16 51 54 56 74
'<' (60) 38
'=' (61) 26
'>' (62) 37
'[' (91) 77
']' (93) 77
'^' (94) 22
'{' (123) 15 16 59 60 61 62 63 64
'}' (125) 15 16 59 60 61 62 63 64
error (256)
CHAR <String> (258) 82
REAL <String> (259) 81
FLOAT <String> (260) 80
INT <String> (261) 79
BOOL <String> (262) 78
STRING <String> (263) 77
CHAR_POINTER <String> (264)
REAL_POINTER <String> (265)
FLOAT_POINTER <String> (266)
INT_POINTER <String> (267)
ELSE (268) 48
IF (269) 48 49
FOR (270) 56
WHILE (271) 55
TRUE (272) 19
FALSE (273) 20
RETURN (274) 7 15 16 54
MAIN <Node> (275)
VAR <String> (276) 74
FUNC <String> (277) 7
PROC <String> (278) 6
NULL_VALUE (279)
AND_OP (280) 28
GE_OP (281) 35
SE_OP (282) 36
NE_OP (283) 27
OR_OP (284) 29
EQL_OP (285) 34
BOOL_VALUE <String> (286)
CHAR_VALUE <String> (287)
STRING_VALUE <String> (288)
INT_NUM <String> (289) 75 77
F_NUM <String> (290) 76
ID <String> (291) 6 7 13 14 21 26 40 41 42 44 57 58
IFX (292)
test (293)
UMINUS (294)
UFUNC (295)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
S <Node> (61)
    on left: 1, on right: 0
FUNC_PROC_DEC <Node> (62)
    on left: 2 3, on right: 1 3 71
DEF_A <Node> (63)
    on left: 4 5, on right: 2 3
PROC_DEF <Node> (64)
    on left: 6, on right: 5
FUNC_DEF <Node> (65)
    on left: 7, on right: 4
ARGES <Node> (66)
    on left: 8 9, on right: 6 7
OUT_ARGES <Node> (67)
    on left: 10, on right: 9 12
OUT_ARGES2 <Node> (68)
    on left: 11 12, on right: 10
INNER_ARGS <Node> (69)
    on left: 13 14, on right: 10 14 74
FUNC_BLOCK <Node> (70)
    on left: 15 16, on right: 7
EXPRASION <Node> (71)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39, on right: 15 16 18 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 48 49 51 54 55 56
FUNC_ACTIVE <Node> (72)
    on left: 40 41, on right: 39
FUNC_ACTIVE_INNER_ARGES <Node> (73)
    on left: 42 43 44 45, on right: 41 44 45
STASTMENT_LIST <Node> (74)
    on left: 46 47, on right: 46 65 67
IF_STASTMENT <Node> (75)
    on left: 48 49, on right: 52
STASTMENT <Node> (76)
    on left: 50 51 52 53, on right: 46 47 48 49 55 56
RETURN_STATMENT <Node> (77)
    on left: 54, on right: 61 62
LOOP_STATMENT <Node> (78)
    on left: 55 56, on right: 53
UPDATES <Node> (79)
    on left: 57 58, on right: 56
COMPUND_STATMENT <Node> (80)
    on left: 59 60 61 62, on right: 50
COMPUND_STATMENT_PROC <Node> (81)
    on left: 63 64, on right: 6
INNER_COMPUND_STATMENT <Node> (82)
    on left: 65 66 67, on right: 16 60 61 64
DEC_INNER_BLOCK <Node> (83)
    on left: 68 69, on right: 66 67 68
NEW_DECLARE <Node> (84)
    on left: 70 71, on right: 68 69
VAR_DECLARE <Node> (85)
    on left: 72 73, on right: 70 73
VF <Node> (86)
    on left: 74, on right: 72 73
CONST <String> (87)
    on left: 75 76, on right: 17 43 45
TYPE <String> (88)
    on left: 77 78 79 80 81 82, on right: 7 10 74


State 0

    0 $accept: . S $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    S              go to state 3
    FUNC_PROC_DEC  go to state 4
    DEF_A          go to state 5
    PROC_DEF       go to state 6
    FUNC_DEF       go to state 7


State 1

    7 FUNC_DEF: FUNC . ID ARGES RETURN TYPE FUNC_BLOCK

    ID  shift, and go to state 8


State 2

    6 PROC_DEF: PROC . ID ARGES COMPUND_STATMENT_PROC

    ID  shift, and go to state 9


State 3

    0 $accept: S . $end

    $end  shift, and go to state 10


State 4

    1 S: FUNC_PROC_DEC .

    $default  reduce using rule 1 (S)


State 5

    2 FUNC_PROC_DEC: DEF_A .
    3              | DEF_A . FUNC_PROC_DEC

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    FUNC      [reduce using rule 2 (FUNC_PROC_DEC)]
    PROC      [reduce using rule 2 (FUNC_PROC_DEC)]
    $default  reduce using rule 2 (FUNC_PROC_DEC)

    FUNC_PROC_DEC  go to state 11
    DEF_A          go to state 5
    PROC_DEF       go to state 6
    FUNC_DEF       go to state 7


State 6

    5 DEF_A: PROC_DEF .

    $default  reduce using rule 5 (DEF_A)


State 7

    4 DEF_A: FUNC_DEF .

    $default  reduce using rule 4 (DEF_A)


State 8

    7 FUNC_DEF: FUNC ID . ARGES RETURN TYPE FUNC_BLOCK

    '('  shift, and go to state 12

    ARGES  go to state 13


State 9

    6 PROC_DEF: PROC ID . ARGES COMPUND_STATMENT_PROC

    '('  shift, and go to state 12

    ARGES  go to state 14


State 10

    0 $accept: S $end .

    $default  accept


State 11

    3 FUNC_PROC_DEC: DEF_A FUNC_PROC_DEC .

    $default  reduce using rule 3 (FUNC_PROC_DEC)


State 12

    8 ARGES: '(' . ')'
    9      | '(' . OUT_ARGES ')'

    ID   shift, and go to state 15
    ')'  shift, and go to state 16

    OUT_ARGES   go to state 17
    INNER_ARGS  go to state 18


State 13

    7 FUNC_DEF: FUNC ID ARGES . RETURN TYPE FUNC_BLOCK

    RETURN  shift, and go to state 19


State 14

    6 PROC_DEF: PROC ID ARGES . COMPUND_STATMENT_PROC

    '{'  shift, and go to state 20

    COMPUND_STATMENT_PROC  go to state 21


State 15

   13 INNER_ARGS: ID .
   14           | ID . ',' INNER_ARGS

    ','  shift, and go to state 22

    $default  reduce using rule 13 (INNER_ARGS)


State 16

    8 ARGES: '(' ')' .

    $default  reduce using rule 8 (ARGES)


State 17

    9 ARGES: '(' OUT_ARGES . ')'

    ')'  shift, and go to state 23


State 18

   10 OUT_ARGES: INNER_ARGS . ':' TYPE OUT_ARGES2

    ':'  shift, and go to state 24


State 19

    7 FUNC_DEF: FUNC ID ARGES RETURN . TYPE FUNC_BLOCK

    CHAR    shift, and go to state 25
    REAL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    BOOL    shift, and go to state 29
    STRING  shift, and go to state 30

    TYPE  go to state 31


State 20

   63 COMPUND_STATMENT_PROC: '{' . '}'
   64                      | '{' . INNER_COMPUND_STATMENT '}'

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    VAR      shift, and go to state 37
    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46
    '}'      shift, and go to state 47

    FUNC_PROC_DEC           go to state 48
    DEF_A                   go to state 5
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 49
    FUNC_ACTIVE             go to state 50
    STASTMENT_LIST          go to state 51
    IF_STASTMENT            go to state 52
    STASTMENT               go to state 53
    LOOP_STATMENT           go to state 54
    COMPUND_STATMENT        go to state 55
    INNER_COMPUND_STATMENT  go to state 56
    DEC_INNER_BLOCK         go to state 57
    NEW_DECLARE             go to state 58
    VAR_DECLARE             go to state 59
    VF                      go to state 60
    CONST                   go to state 61


State 21

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC .

    $default  reduce using rule 6 (PROC_DEF)


State 22

   14 INNER_ARGS: ID ',' . INNER_ARGS

    ID  shift, and go to state 15

    INNER_ARGS  go to state 62


State 23

    9 ARGES: '(' OUT_ARGES ')' .

    $default  reduce using rule 9 (ARGES)


State 24

   10 OUT_ARGES: INNER_ARGS ':' . TYPE OUT_ARGES2

    CHAR    shift, and go to state 25
    REAL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    BOOL    shift, and go to state 29
    STRING  shift, and go to state 30

    TYPE  go to state 63


State 25

   82 TYPE: CHAR .

    $default  reduce using rule 82 (TYPE)


State 26

   81 TYPE: REAL .

    $default  reduce using rule 81 (TYPE)


State 27

   80 TYPE: FLOAT .

    $default  reduce using rule 80 (TYPE)


State 28

   79 TYPE: INT .

    $default  reduce using rule 79 (TYPE)


State 29

   78 TYPE: BOOL .

    $default  reduce using rule 78 (TYPE)


State 30

   77 TYPE: STRING . '[' INT_NUM ']'

    '['  shift, and go to state 64


State 31

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE . FUNC_BLOCK

    '{'  shift, and go to state 65

    FUNC_BLOCK  go to state 66


State 32

   48 IF_STASTMENT: IF . '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   49             | IF . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 67


State 33

   56 LOOP_STATMENT: FOR . '(' EXPRASION ';' EXPRASION ';' UPDATES ')' STASTMENT

    '('  shift, and go to state 68


State 34

   55 LOOP_STATMENT: WHILE . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 69


State 35

   19 EXPRASION: TRUE .

    $default  reduce using rule 19 (EXPRASION)


State 36

   20 EXPRASION: FALSE .

    $default  reduce using rule 20 (EXPRASION)


State 37

   74 VF: VAR . INNER_ARGS ':' TYPE ';'

    ID  shift, and go to state 15

    INNER_ARGS  go to state 70


State 38

   75 CONST: INT_NUM .

    $default  reduce using rule 75 (CONST)


State 39

   76 CONST: F_NUM .

    $default  reduce using rule 76 (CONST)


State 40

   21 EXPRASION: ID .
   26          | ID . '=' EXPRASION
   40 FUNC_ACTIVE: ID . '(' ')'
   41            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'

    '('  shift, and go to state 71
    '='  shift, and go to state 72

    $default  reduce using rule 21 (EXPRASION)


State 41

   24 EXPRASION: '-' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 73
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 42

   25 EXPRASION: '!' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 74
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 43

   22 EXPRASION: '^' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 75
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 44

   23 EXPRASION: '&' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 76
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 45

   18 EXPRASION: '(' . EXPRASION ')'

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 77
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 46

   59 COMPUND_STATMENT: '{' . '}'
   60                 | '{' . INNER_COMPUND_STATMENT '}'
   61                 | '{' . INNER_COMPUND_STATMENT RETURN_STATMENT '}'
   62                 | '{' . RETURN_STATMENT '}'

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    RETURN   shift, and go to state 78
    VAR      shift, and go to state 37
    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46
    '}'      shift, and go to state 79

    FUNC_PROC_DEC           go to state 48
    DEF_A                   go to state 5
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 49
    FUNC_ACTIVE             go to state 50
    STASTMENT_LIST          go to state 51
    IF_STASTMENT            go to state 52
    STASTMENT               go to state 53
    RETURN_STATMENT         go to state 80
    LOOP_STATMENT           go to state 54
    COMPUND_STATMENT        go to state 55
    INNER_COMPUND_STATMENT  go to state 81
    DEC_INNER_BLOCK         go to state 57
    NEW_DECLARE             go to state 58
    VAR_DECLARE             go to state 59
    VF                      go to state 60
    CONST                   go to state 61


State 47

   63 COMPUND_STATMENT_PROC: '{' '}' .

    $default  reduce using rule 63 (COMPUND_STATMENT_PROC)


State 48

   71 NEW_DECLARE: FUNC_PROC_DEC .

    $default  reduce using rule 71 (NEW_DECLARE)


State 49

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   51 STASTMENT: EXPRASION . ';'

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 88
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 50

   39 EXPRASION: FUNC_ACTIVE .

    $default  reduce using rule 39 (EXPRASION)


State 51

   46 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   65 INNER_COMPUND_STATMENT: STASTMENT_LIST .

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    $default  reduce using rule 65 (INNER_COMPUND_STATMENT)

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 95
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 52

   52 STASTMENT: IF_STASTMENT .

    $default  reduce using rule 52 (STASTMENT)


State 53

   47 STASTMENT_LIST: STASTMENT .

    $default  reduce using rule 47 (STASTMENT_LIST)


State 54

   53 STASTMENT: LOOP_STATMENT .

    $default  reduce using rule 53 (STASTMENT)


State 55

   50 STASTMENT: COMPUND_STATMENT .

    $default  reduce using rule 50 (STASTMENT)


State 56

   64 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT . '}'

    '}'  shift, and go to state 96


State 57

   66 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK .
   67                       | DEC_INNER_BLOCK . STASTMENT_LIST

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    $default  reduce using rule 66 (INNER_COMPUND_STATMENT)

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    STASTMENT_LIST    go to state 97
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 53
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 58

   68 DEC_INNER_BLOCK: NEW_DECLARE . DEC_INNER_BLOCK
   69                | NEW_DECLARE .

    VAR   shift, and go to state 37
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 69 (DEC_INNER_BLOCK)

    FUNC_PROC_DEC    go to state 48
    DEF_A            go to state 5
    PROC_DEF         go to state 6
    FUNC_DEF         go to state 7
    DEC_INNER_BLOCK  go to state 98
    NEW_DECLARE      go to state 58
    VAR_DECLARE      go to state 59
    VF               go to state 60


State 59

   70 NEW_DECLARE: VAR_DECLARE .
   73 VAR_DECLARE: VAR_DECLARE . VF

    VAR  shift, and go to state 37

    VAR       [reduce using rule 70 (NEW_DECLARE)]
    $default  reduce using rule 70 (NEW_DECLARE)

    VF  go to state 99


State 60

   72 VAR_DECLARE: VF .

    $default  reduce using rule 72 (VAR_DECLARE)


State 61

   17 EXPRASION: CONST .

    $default  reduce using rule 17 (EXPRASION)


State 62

   14 INNER_ARGS: ID ',' INNER_ARGS .

    $default  reduce using rule 14 (INNER_ARGS)


State 63

   10 OUT_ARGES: INNER_ARGS ':' TYPE . OUT_ARGES2

    ';'  shift, and go to state 100

    $default  reduce using rule 11 (OUT_ARGES2)

    OUT_ARGES2  go to state 101


State 64

   77 TYPE: STRING '[' . INT_NUM ']'

    INT_NUM  shift, and go to state 102


State 65

   15 FUNC_BLOCK: '{' . RETURN EXPRASION ';' '}'
   16           | '{' . INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    RETURN   shift, and go to state 103
    VAR      shift, and go to state 37
    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    FUNC_PROC_DEC           go to state 48
    DEF_A                   go to state 5
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 49
    FUNC_ACTIVE             go to state 50
    STASTMENT_LIST          go to state 51
    IF_STASTMENT            go to state 52
    STASTMENT               go to state 53
    LOOP_STATMENT           go to state 54
    COMPUND_STATMENT        go to state 55
    INNER_COMPUND_STATMENT  go to state 104
    DEC_INNER_BLOCK         go to state 57
    NEW_DECLARE             go to state 58
    VAR_DECLARE             go to state 59
    VF                      go to state 60
    CONST                   go to state 61


State 66

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK .

    $default  reduce using rule 7 (FUNC_DEF)


State 67

   48 IF_STASTMENT: IF '(' . EXPRASION ')' STASTMENT ELSE STASTMENT
   49             | IF '(' . EXPRASION ')' STASTMENT

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 105
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 68

   56 LOOP_STATMENT: FOR '(' . EXPRASION ';' EXPRASION ';' UPDATES ')' STASTMENT

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 106
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 69

   55 LOOP_STATMENT: WHILE '(' . EXPRASION ')' STASTMENT

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 107
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 70

   74 VF: VAR INNER_ARGS . ':' TYPE ';'

    ':'  shift, and go to state 108


State 71

   40 FUNC_ACTIVE: ID '(' . ')'
   41            | ID '(' . FUNC_ACTIVE_INNER_ARGES ')'

    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 109
    ')'      shift, and go to state 110

    FUNC_ACTIVE_INNER_ARGES  go to state 111
    CONST                    go to state 112


State 72

   26 EXPRASION: ID '=' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 113
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 73

   24 EXPRASION: '-' EXPRASION .
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    NE_OP     [reduce using rule 24 (EXPRASION)]
    $default  reduce using rule 24 (EXPRASION)


State 74

   25 EXPRASION: '!' EXPRASION .
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    NE_OP     [reduce using rule 25 (EXPRASION)]
    $default  reduce using rule 25 (EXPRASION)


State 75

   22 EXPRASION: '^' EXPRASION .
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    NE_OP     [reduce using rule 22 (EXPRASION)]
    $default  reduce using rule 22 (EXPRASION)


State 76

   23 EXPRASION: '&' EXPRASION .
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    NE_OP     [reduce using rule 23 (EXPRASION)]
    $default  reduce using rule 23 (EXPRASION)


State 77

   18 EXPRASION: '(' EXPRASION . ')'
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ')'     shift, and go to state 114


State 78

   54 RETURN_STATMENT: RETURN . EXPRASION ';'

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 115
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 79

   59 COMPUND_STATMENT: '{' '}' .

    $default  reduce using rule 59 (COMPUND_STATMENT)


State 80

   62 COMPUND_STATMENT: '{' RETURN_STATMENT . '}'

    '}'  shift, and go to state 116


State 81

   60 COMPUND_STATMENT: '{' INNER_COMPUND_STATMENT . '}'
   61                 | '{' INNER_COMPUND_STATMENT . RETURN_STATMENT '}'

    RETURN  shift, and go to state 78
    '}'     shift, and go to state 117

    RETURN_STATMENT  go to state 118


State 82

   28 EXPRASION: EXPRASION AND_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 119
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 83

   35 EXPRASION: EXPRASION GE_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 120
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 84

   36 EXPRASION: EXPRASION SE_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 121
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 85

   27 EXPRASION: EXPRASION NE_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 122
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 86

   29 EXPRASION: EXPRASION OR_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 123
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 87

   34 EXPRASION: EXPRASION EQL_OP . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 124
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 88

   51 STASTMENT: EXPRASION ';' .

    $default  reduce using rule 51 (STASTMENT)


State 89

   30 EXPRASION: EXPRASION '+' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 125
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 90

   31 EXPRASION: EXPRASION '-' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 126
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 91

   33 EXPRASION: EXPRASION '*' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 127
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 92

   32 EXPRASION: EXPRASION '/' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 128
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 93

   37 EXPRASION: EXPRASION '>' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 129
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 94

   38 EXPRASION: EXPRASION '<' . EXPRASION

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 130
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 95

   46 STASTMENT_LIST: STASTMENT_LIST STASTMENT .

    $default  reduce using rule 46 (STASTMENT_LIST)


State 96

   64 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT '}' .

    $default  reduce using rule 64 (COMPUND_STATMENT_PROC)


State 97

   46 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   67 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK STASTMENT_LIST .

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    $default  reduce using rule 67 (INNER_COMPUND_STATMENT)

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 95
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 98

   68 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK .

    $default  reduce using rule 68 (DEC_INNER_BLOCK)


State 99

   73 VAR_DECLARE: VAR_DECLARE VF .

    $default  reduce using rule 73 (VAR_DECLARE)


State 100

   12 OUT_ARGES2: ';' . OUT_ARGES

    ID  shift, and go to state 15

    OUT_ARGES   go to state 131
    INNER_ARGS  go to state 18


State 101

   10 OUT_ARGES: INNER_ARGS ':' TYPE OUT_ARGES2 .

    $default  reduce using rule 10 (OUT_ARGES)


State 102

   77 TYPE: STRING '[' INT_NUM . ']'

    ']'  shift, and go to state 132


State 103

   15 FUNC_BLOCK: '{' RETURN . EXPRASION ';' '}'

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 133
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 104

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT . RETURN EXPRASION ';' '}'

    RETURN  shift, and go to state 134


State 105

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   48 IF_STASTMENT: IF '(' EXPRASION . ')' STASTMENT ELSE STASTMENT
   49             | IF '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ')'     shift, and go to state 135


State 106

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   56 LOOP_STATMENT: FOR '(' EXPRASION . ';' EXPRASION ';' UPDATES ')' STASTMENT

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 136
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 107

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   55 LOOP_STATMENT: WHILE '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94
    ')'     shift, and go to state 137


State 108

   74 VF: VAR INNER_ARGS ':' . TYPE ';'

    CHAR    shift, and go to state 25
    REAL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    BOOL    shift, and go to state 29
    STRING  shift, and go to state 30

    TYPE  go to state 138


State 109

   42 FUNC_ACTIVE_INNER_ARGES: ID .
   44                        | ID . ',' FUNC_ACTIVE_INNER_ARGES

    ','  shift, and go to state 139

    $default  reduce using rule 42 (FUNC_ACTIVE_INNER_ARGES)


State 110

   40 FUNC_ACTIVE: ID '(' ')' .

    $default  reduce using rule 40 (FUNC_ACTIVE)


State 111

   41 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES . ')'

    ')'  shift, and go to state 140


State 112

   43 FUNC_ACTIVE_INNER_ARGES: CONST .
   45                        | CONST . ',' FUNC_ACTIVE_INNER_ARGES

    ','  shift, and go to state 141

    $default  reduce using rule 43 (FUNC_ACTIVE_INNER_ARGES)


State 113

   26 EXPRASION: ID '=' EXPRASION .
   27          | EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    AND_OP    [reduce using rule 26 (EXPRASION)]
    GE_OP     [reduce using rule 26 (EXPRASION)]
    SE_OP     [reduce using rule 26 (EXPRASION)]
    NE_OP     [reduce using rule 26 (EXPRASION)]
    OR_OP     [reduce using rule 26 (EXPRASION)]
    EQL_OP    [reduce using rule 26 (EXPRASION)]
    '+'       [reduce using rule 26 (EXPRASION)]
    '-'       [reduce using rule 26 (EXPRASION)]
    '*'       [reduce using rule 26 (EXPRASION)]
    '/'       [reduce using rule 26 (EXPRASION)]
    '>'       [reduce using rule 26 (EXPRASION)]
    '<'       [reduce using rule 26 (EXPRASION)]
    $default  reduce using rule 26 (EXPRASION)


State 114

   18 EXPRASION: '(' EXPRASION ')' .

    $default  reduce using rule 18 (EXPRASION)


State 115

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   54 RETURN_STATMENT: RETURN EXPRASION . ';'

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 142
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 116

   62 COMPUND_STATMENT: '{' RETURN_STATMENT '}' .

    $default  reduce using rule 62 (COMPUND_STATMENT)


State 117

   60 COMPUND_STATMENT: '{' INNER_COMPUND_STATMENT '}' .

    $default  reduce using rule 60 (COMPUND_STATMENT)


State 118

   61 COMPUND_STATMENT: '{' INNER_COMPUND_STATMENT RETURN_STATMENT . '}'

    '}'  shift, and go to state 143


State 119

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   28          | EXPRASION AND_OP EXPRASION .
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 28 (EXPRASION)]
    $default  reduce using rule 28 (EXPRASION)


State 120

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   35          | EXPRASION GE_OP EXPRASION .
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 35 (EXPRASION)]
    $default  reduce using rule 35 (EXPRASION)


State 121

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   36          | EXPRASION SE_OP EXPRASION .
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 36 (EXPRASION)]
    $default  reduce using rule 36 (EXPRASION)


State 122

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   27          | EXPRASION NE_OP EXPRASION .
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    AND_OP    [reduce using rule 27 (EXPRASION)]
    GE_OP     [reduce using rule 27 (EXPRASION)]
    SE_OP     [reduce using rule 27 (EXPRASION)]
    NE_OP     [reduce using rule 27 (EXPRASION)]
    OR_OP     [reduce using rule 27 (EXPRASION)]
    EQL_OP    [reduce using rule 27 (EXPRASION)]
    '+'       [reduce using rule 27 (EXPRASION)]
    '-'       [reduce using rule 27 (EXPRASION)]
    '*'       [reduce using rule 27 (EXPRASION)]
    '/'       [reduce using rule 27 (EXPRASION)]
    '>'       [reduce using rule 27 (EXPRASION)]
    '<'       [reduce using rule 27 (EXPRASION)]
    $default  reduce using rule 27 (EXPRASION)


State 123

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   29          | EXPRASION OR_OP EXPRASION .
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 29 (EXPRASION)]
    $default  reduce using rule 29 (EXPRASION)


State 124

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   34          | EXPRASION EQL_OP EXPRASION .
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 34 (EXPRASION)]
    $default  reduce using rule 34 (EXPRASION)


State 125

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   30          | EXPRASION '+' EXPRASION .
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    NE_OP     [reduce using rule 30 (EXPRASION)]
    $default  reduce using rule 30 (EXPRASION)


State 126

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   31          | EXPRASION '-' EXPRASION .
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    NE_OP     [reduce using rule 31 (EXPRASION)]
    $default  reduce using rule 31 (EXPRASION)


State 127

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   33          | EXPRASION '*' EXPRASION .
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    NE_OP     [reduce using rule 33 (EXPRASION)]
    $default  reduce using rule 33 (EXPRASION)


State 128

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   32          | EXPRASION '/' EXPRASION .
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94

    NE_OP     [reduce using rule 32 (EXPRASION)]
    $default  reduce using rule 32 (EXPRASION)


State 129

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   37          | EXPRASION '>' EXPRASION .
   38          | EXPRASION . '<' EXPRASION

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 37 (EXPRASION)]
    $default  reduce using rule 37 (EXPRASION)


State 130

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   38          | EXPRASION '<' EXPRASION .

    NE_OP  shift, and go to state 85

    AND_OP  error (nonassociative)
    GE_OP   error (nonassociative)
    SE_OP   error (nonassociative)
    OR_OP   error (nonassociative)
    EQL_OP  error (nonassociative)
    '>'     error (nonassociative)
    '<'     error (nonassociative)

    NE_OP     [reduce using rule 38 (EXPRASION)]
    $default  reduce using rule 38 (EXPRASION)


State 131

   12 OUT_ARGES2: ';' OUT_ARGES .

    $default  reduce using rule 12 (OUT_ARGES2)


State 132

   77 TYPE: STRING '[' INT_NUM ']' .

    $default  reduce using rule 77 (TYPE)


State 133

   15 FUNC_BLOCK: '{' RETURN EXPRASION . ';' '}'
   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 144
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 134

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN . EXPRASION ';' '}'

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 145
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 135

   48 IF_STASTMENT: IF '(' EXPRASION ')' . STASTMENT ELSE STASTMENT
   49             | IF '(' EXPRASION ')' . STASTMENT

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 146
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 136

   56 LOOP_STATMENT: FOR '(' EXPRASION ';' . EXPRASION ';' UPDATES ')' STASTMENT

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45

    EXPRASION    go to state 147
    FUNC_ACTIVE  go to state 50
    CONST        go to state 61


State 137

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' . STASTMENT

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 148
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 138

   74 VF: VAR INNER_ARGS ':' TYPE . ';'

    ';'  shift, and go to state 149


State 139

   44 FUNC_ACTIVE_INNER_ARGES: ID ',' . FUNC_ACTIVE_INNER_ARGES

    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 109

    FUNC_ACTIVE_INNER_ARGES  go to state 150
    CONST                    go to state 112


State 140

   41 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES ')' .

    $default  reduce using rule 41 (FUNC_ACTIVE)


State 141

   45 FUNC_ACTIVE_INNER_ARGES: CONST ',' . FUNC_ACTIVE_INNER_ARGES

    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 109

    FUNC_ACTIVE_INNER_ARGES  go to state 151
    CONST                    go to state 112


State 142

   54 RETURN_STATMENT: RETURN EXPRASION ';' .

    $default  reduce using rule 54 (RETURN_STATMENT)


State 143

   61 COMPUND_STATMENT: '{' INNER_COMPUND_STATMENT RETURN_STATMENT '}' .

    $default  reduce using rule 61 (COMPUND_STATMENT)


State 144

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 152


State 145

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION . ';' '}'
   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 153
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 146

   48 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT . ELSE STASTMENT
   49             | IF '(' EXPRASION ')' STASTMENT .

    ELSE  shift, and go to state 154

    $default  reduce using rule 49 (IF_STASTMENT)


State 147

   27 EXPRASION: EXPRASION . NE_OP EXPRASION
   28          | EXPRASION . AND_OP EXPRASION
   29          | EXPRASION . OR_OP EXPRASION
   30          | EXPRASION . '+' EXPRASION
   31          | EXPRASION . '-' EXPRASION
   32          | EXPRASION . '/' EXPRASION
   33          | EXPRASION . '*' EXPRASION
   34          | EXPRASION . EQL_OP EXPRASION
   35          | EXPRASION . GE_OP EXPRASION
   36          | EXPRASION . SE_OP EXPRASION
   37          | EXPRASION . '>' EXPRASION
   38          | EXPRASION . '<' EXPRASION
   56 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION . ';' UPDATES ')' STASTMENT

    AND_OP  shift, and go to state 82
    GE_OP   shift, and go to state 83
    SE_OP   shift, and go to state 84
    NE_OP   shift, and go to state 85
    OR_OP   shift, and go to state 86
    EQL_OP  shift, and go to state 87
    ';'     shift, and go to state 155
    '+'     shift, and go to state 89
    '-'     shift, and go to state 90
    '*'     shift, and go to state 91
    '/'     shift, and go to state 92
    '>'     shift, and go to state 93
    '<'     shift, and go to state 94


State 148

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT .

    $default  reduce using rule 55 (LOOP_STATMENT)


State 149

   74 VF: VAR INNER_ARGS ':' TYPE ';' .

    $default  reduce using rule 74 (VF)


State 150

   44 FUNC_ACTIVE_INNER_ARGES: ID ',' FUNC_ACTIVE_INNER_ARGES .

    $default  reduce using rule 44 (FUNC_ACTIVE_INNER_ARGES)


State 151

   45 FUNC_ACTIVE_INNER_ARGES: CONST ',' FUNC_ACTIVE_INNER_ARGES .

    $default  reduce using rule 45 (FUNC_ACTIVE_INNER_ARGES)


State 152

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}' .

    $default  reduce using rule 15 (FUNC_BLOCK)


State 153

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 156


State 154

   48 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE . STASTMENT

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 157
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 155

   56 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' . UPDATES ')' STASTMENT

    ID  shift, and go to state 158

    UPDATES  go to state 159


State 156

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}' .

    $default  reduce using rule 16 (FUNC_BLOCK)


State 157

   48 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT .

    $default  reduce using rule 48 (IF_STASTMENT)


State 158

   57 UPDATES: ID . '+' '+'
   58        | ID . '-' '-'

    '+'  shift, and go to state 160
    '-'  shift, and go to state 161


State 159

   56 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' UPDATES . ')' STASTMENT

    ')'  shift, and go to state 162


State 160

   57 UPDATES: ID '+' . '+'

    '+'  shift, and go to state 163


State 161

   58 UPDATES: ID '-' . '-'

    '-'  shift, and go to state 164


State 162

   56 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' UPDATES ')' . STASTMENT

    IF       shift, and go to state 32
    FOR      shift, and go to state 33
    WHILE    shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    INT_NUM  shift, and go to state 38
    F_NUM    shift, and go to state 39
    ID       shift, and go to state 40
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '^'      shift, and go to state 43
    '&'      shift, and go to state 44
    '('      shift, and go to state 45
    '{'      shift, and go to state 46

    EXPRASION         go to state 49
    FUNC_ACTIVE       go to state 50
    IF_STASTMENT      go to state 52
    STASTMENT         go to state 165
    LOOP_STATMENT     go to state 54
    COMPUND_STATMENT  go to state 55
    CONST             go to state 61


State 163

   57 UPDATES: ID '+' '+' .

    $default  reduce using rule 57 (UPDATES)


State 164

   58 UPDATES: ID '-' '-' .

    $default  reduce using rule 58 (UPDATES)


State 165

   56 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' UPDATES ')' STASTMENT .

    $default  reduce using rule 56 (LOOP_STATMENT)
