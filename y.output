Grammar

    0 $accept: S $end

    1 S: FUNC_PROC_DEC

    2 FUNC_PROC_DEC: DEF_A
    3              | FUNC_PROC_DEC DEF_A

    4 DEF_A: FUNC_DEF
    5      | PROC_DEF

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK

    8 ARGES: '(' ')'
    9      | '(' OUT_ARGES ')'

   10 OUT_ARGES: INNER_ARGS ':' TYPE
   11          | INNER_ARGS ':' TYPE ';' OUT_ARGES

   12 INNER_ARGS: ID
   13           | ID ',' INNER_ARGS

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}'
   15           | '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

   16 EXPRASION: CONST
   17          | '(' EXPRASION ')'
   18          | ID
   19          | '-' EXPRASION
   20          | '!' EXPRASION
   21          | ID '[' EXPRASION ']'
   22          | EXPRASION NE_OP EXPRASION
   23          | EXPRASION AND_OP EXPRASION
   24          | EXPRASION OR_OP EXPRASION
   25          | EXPRASION '+' EXPRASION
   26          | EXPRASION '-' EXPRASION
   27          | EXPRASION '/' EXPRASION
   28          | EXPRASION '*' EXPRASION
   29          | EXPRASION EQL_OP EXPRASION
   30          | EXPRASION GE_OP EXPRASION
   31          | EXPRASION SE_OP EXPRASION
   32          | EXPRASION '>' EXPRASION
   33          | EXPRASION '<' EXPRASION
   34          | FUNC_ACTIVE
   35          | '|' EXPRASION '|'
   36          | '^' EXPRASION
   37          | '&' EXPRASION

   38 FUNC_ACTIVE: ID '(' ')'
   39            | ID '(' FUNC_ACTIVE_INNER_ARGES ')'

   40 FUNC_ACTIVE_INNER_ARGES: EXPRASION
   41                        | EXPRASION ',' FUNC_ACTIVE_INNER_ARGES

   42 STASTMENT_LIST: STASTMENT_LIST STASTMENT
   43               | STASTMENT

   44 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   45             | IF '(' EXPRASION ')' STASTMENT

   46 STASTMENT: COMPUND_STATMENT_PROC
   47          | EXPRASION ';'
   48          | IF_STASTMENT
   49          | LOOP_STATMENT
   50          | ID '=' EXPRASION ';'
   51          | ID '[' EXPRASION ']' '=' EXPRASION ';'
   52          | '&' ID '=' EXPRASION ';'
   53          | '^' ID '=' EXPRASION ';'

   54 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT
   55              | FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

   56 COMPUND_STATMENT_PROC: '{' '}'
   57                      | '{' INNER_COMPUND_STATMENT '}'

   58 INNER_COMPUND_STATMENT: STASTMENT_LIST
   59                       | DEC_INNER_BLOCK
   60                       | DEC_INNER_BLOCK STASTMENT_LIST

   61 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK
   62                | NEW_DECLARE

   63 NEW_DECLARE: VF
   64            | DEF_A

   65 VF: VAR VFDEC

   66 VFDEC: INNER_ARGS ':' TYPE ';'

   67 CONST: INT_NUM
   68      | R_NUM
   69      | HEX_NUM
   70      | NULLA
   71      | CHAR_VALUE
   72      | STRING_VALUE
   73      | BOOL_VAL

   74 TYPE: STRING '[' INT_NUM ']'
   75     | BOOL
   76     | INT
   77     | REAL
   78     | CHAR
   79     | CHAR_POINTER
   80     | REAL_POINTER
   81     | INT_POINTER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 20
'&' (38) 37 52
'(' (40) 8 9 17 38 39 44 45 54 55
')' (41) 8 9 17 38 39 44 45 54 55
'*' (42) 28
'+' (43) 25
',' (44) 13 41
'-' (45) 19 26
'/' (47) 27
':' (58) 10 11 66
';' (59) 11 14 15 47 50 51 52 53 55 66
'<' (60) 33
'=' (61) 50 51 52 53
'>' (62) 32
'[' (91) 21 51 74
']' (93) 21 51 74
'^' (94) 36 53
'{' (123) 14 15 56 57
'|' (124) 35
'}' (125) 14 15 56 57
error (256)
CHAR <String> (258) 78
REAL <String> (259) 77
INT <String> (260) 76
BOOL <String> (261) 75
STRING <String> (262) 74
CHAR_POINTER <String> (263) 79
REAL_POINTER <String> (264) 80
INT_POINTER <String> (265) 81
NULLA <String> (266) 70
ELSE (267) 44
IF (268) 44 45
FOR (269) 55
WHILE (270) 54
RETURN (271) 7 14 15
VAR <String> (272) 65
FUNC <String> (273) 7
PROC <String> (274) 6
AND_OP (275) 23
GE_OP (276) 30
SE_OP (277) 31
NE_OP (278) 22
OR_OP (279) 24
EQL_OP (280) 29
CHAR_VALUE <String> (281) 71
STRING_VALUE <String> (282) 72
INT_NUM <String> (283) 67 74
R_NUM <String> (284) 68
HEX_NUM <String> (285) 69
ID <String> (286) 6 7 12 13 18 21 38 39 50 51 52 53
BOOL_VAL <String> (287) 73
IFX (288)
UMINUS (289)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
S <Node> (56)
    on left: 1, on right: 0
FUNC_PROC_DEC <Node> (57)
    on left: 2 3, on right: 1 3
DEF_A <Node> (58)
    on left: 4 5, on right: 2 3 64
PROC_DEF <Node> (59)
    on left: 6, on right: 5
FUNC_DEF <Node> (60)
    on left: 7, on right: 4
ARGES <Node> (61)
    on left: 8 9, on right: 6 7
OUT_ARGES <Node> (62)
    on left: 10 11, on right: 9 11
INNER_ARGS <Node> (63)
    on left: 12 13, on right: 10 11 13 66
FUNC_BLOCK <Node> (64)
    on left: 14 15, on right: 7
EXPRASION <Node> (65)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37, on right: 14 15 17 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 35 36 37 40 41 44 45 47 50 51 52 53 54 55
FUNC_ACTIVE <Node> (66)
    on left: 38 39, on right: 34
FUNC_ACTIVE_INNER_ARGES <Node> (67)
    on left: 40 41, on right: 39 41
STASTMENT_LIST <Node> (68)
    on left: 42 43, on right: 42 58 60
IF_STASTMENT <Node> (69)
    on left: 44 45, on right: 48
STASTMENT <Node> (70)
    on left: 46 47 48 49 50 51 52 53, on right: 42 43 44 45 54 55
LOOP_STATMENT <Node> (71)
    on left: 54 55, on right: 49
COMPUND_STATMENT_PROC <Node> (72)
    on left: 56 57, on right: 6 46
INNER_COMPUND_STATMENT <Node> (73)
    on left: 58 59 60, on right: 15 57
DEC_INNER_BLOCK <Node> (74)
    on left: 61 62, on right: 59 60 61
NEW_DECLARE <Node> (75)
    on left: 63 64, on right: 61 62
VF <Node> (76)
    on left: 65, on right: 63
VFDEC <Node> (77)
    on left: 66, on right: 65
CONST <Node> (78)
    on left: 67 68 69 70 71 72 73, on right: 16
TYPE <String> (79)
    on left: 74 75 76 77 78 79 80 81, on right: 7 10 11 66


State 0

    0 $accept: . S $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    S              go to state 3
    FUNC_PROC_DEC  go to state 4
    DEF_A          go to state 5
    PROC_DEF       go to state 6
    FUNC_DEF       go to state 7


State 1

    7 FUNC_DEF: FUNC . ID ARGES RETURN TYPE FUNC_BLOCK

    ID  shift, and go to state 8


State 2

    6 PROC_DEF: PROC . ID ARGES COMPUND_STATMENT_PROC

    ID  shift, and go to state 9


State 3

    0 $accept: S . $end

    $end  shift, and go to state 10


State 4

    1 S: FUNC_PROC_DEC .
    3 FUNC_PROC_DEC: FUNC_PROC_DEC . DEF_A

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 1 (S)

    DEF_A     go to state 11
    PROC_DEF  go to state 6
    FUNC_DEF  go to state 7


State 5

    2 FUNC_PROC_DEC: DEF_A .

    $default  reduce using rule 2 (FUNC_PROC_DEC)


State 6

    5 DEF_A: PROC_DEF .

    $default  reduce using rule 5 (DEF_A)


State 7

    4 DEF_A: FUNC_DEF .

    $default  reduce using rule 4 (DEF_A)


State 8

    7 FUNC_DEF: FUNC ID . ARGES RETURN TYPE FUNC_BLOCK

    '('  shift, and go to state 12

    ARGES  go to state 13


State 9

    6 PROC_DEF: PROC ID . ARGES COMPUND_STATMENT_PROC

    '('  shift, and go to state 12

    ARGES  go to state 14


State 10

    0 $accept: S $end .

    $default  accept


State 11

    3 FUNC_PROC_DEC: FUNC_PROC_DEC DEF_A .

    $default  reduce using rule 3 (FUNC_PROC_DEC)


State 12

    8 ARGES: '(' . ')'
    9      | '(' . OUT_ARGES ')'

    ID   shift, and go to state 15
    ')'  shift, and go to state 16

    OUT_ARGES   go to state 17
    INNER_ARGS  go to state 18


State 13

    7 FUNC_DEF: FUNC ID ARGES . RETURN TYPE FUNC_BLOCK

    RETURN  shift, and go to state 19


State 14

    6 PROC_DEF: PROC ID ARGES . COMPUND_STATMENT_PROC

    '{'  shift, and go to state 20

    COMPUND_STATMENT_PROC  go to state 21


State 15

   12 INNER_ARGS: ID .
   13           | ID . ',' INNER_ARGS

    ','  shift, and go to state 22

    $default  reduce using rule 12 (INNER_ARGS)


State 16

    8 ARGES: '(' ')' .

    $default  reduce using rule 8 (ARGES)


State 17

    9 ARGES: '(' OUT_ARGES . ')'

    ')'  shift, and go to state 23


State 18

   10 OUT_ARGES: INNER_ARGS . ':' TYPE
   11          | INNER_ARGS . ':' TYPE ';' OUT_ARGES

    ':'  shift, and go to state 24


State 19

    7 FUNC_DEF: FUNC ID ARGES RETURN . TYPE FUNC_BLOCK

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 33


State 20

   56 COMPUND_STATMENT_PROC: '{' . '}'
   57                      | '{' . INNER_COMPUND_STATMENT '}'

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    VAR           shift, and go to state 38
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '}'           shift, and go to state 51
    '|'           shift, and go to state 52

    DEF_A                   go to state 53
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 54
    FUNC_ACTIVE             go to state 55
    STASTMENT_LIST          go to state 56
    IF_STASTMENT            go to state 57
    STASTMENT               go to state 58
    LOOP_STATMENT           go to state 59
    COMPUND_STATMENT_PROC   go to state 60
    INNER_COMPUND_STATMENT  go to state 61
    DEC_INNER_BLOCK         go to state 62
    NEW_DECLARE             go to state 63
    VF                      go to state 64
    CONST                   go to state 65


State 21

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC .

    $default  reduce using rule 6 (PROC_DEF)


State 22

   13 INNER_ARGS: ID ',' . INNER_ARGS

    ID  shift, and go to state 15

    INNER_ARGS  go to state 66


State 23

    9 ARGES: '(' OUT_ARGES ')' .

    $default  reduce using rule 9 (ARGES)


State 24

   10 OUT_ARGES: INNER_ARGS ':' . TYPE
   11          | INNER_ARGS ':' . TYPE ';' OUT_ARGES

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 67


State 25

   78 TYPE: CHAR .

    $default  reduce using rule 78 (TYPE)


State 26

   77 TYPE: REAL .

    $default  reduce using rule 77 (TYPE)


State 27

   76 TYPE: INT .

    $default  reduce using rule 76 (TYPE)


State 28

   75 TYPE: BOOL .

    $default  reduce using rule 75 (TYPE)


State 29

   74 TYPE: STRING . '[' INT_NUM ']'

    '['  shift, and go to state 68


State 30

   79 TYPE: CHAR_POINTER .

    $default  reduce using rule 79 (TYPE)


State 31

   80 TYPE: REAL_POINTER .

    $default  reduce using rule 80 (TYPE)


State 32

   81 TYPE: INT_POINTER .

    $default  reduce using rule 81 (TYPE)


State 33

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE . FUNC_BLOCK

    '{'  shift, and go to state 69

    FUNC_BLOCK  go to state 70


State 34

   70 CONST: NULLA .

    $default  reduce using rule 70 (CONST)


State 35

   44 IF_STASTMENT: IF . '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   45             | IF . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 71


State 36

   55 LOOP_STATMENT: FOR . '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

    '('  shift, and go to state 72


State 37

   54 LOOP_STATMENT: WHILE . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 73


State 38

   65 VF: VAR . VFDEC

    ID  shift, and go to state 15

    INNER_ARGS  go to state 74
    VFDEC       go to state 75


State 39

   71 CONST: CHAR_VALUE .

    $default  reduce using rule 71 (CONST)


State 40

   72 CONST: STRING_VALUE .

    $default  reduce using rule 72 (CONST)


State 41

   67 CONST: INT_NUM .

    $default  reduce using rule 67 (CONST)


State 42

   68 CONST: R_NUM .

    $default  reduce using rule 68 (CONST)


State 43

   69 CONST: HEX_NUM .

    $default  reduce using rule 69 (CONST)


State 44

   18 EXPRASION: ID .
   21          | ID . '[' EXPRASION ']'
   38 FUNC_ACTIVE: ID . '(' ')'
   39            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   50 STASTMENT: ID . '=' EXPRASION ';'
   51          | ID . '[' EXPRASION ']' '=' EXPRASION ';'

    '('  shift, and go to state 76
    '['  shift, and go to state 77
    '='  shift, and go to state 78

    $default  reduce using rule 18 (EXPRASION)


State 45

   73 CONST: BOOL_VAL .

    $default  reduce using rule 73 (CONST)


State 46

   20 EXPRASION: '!' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 82
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 47

   36 EXPRASION: '^' . EXPRASION
   53 STASTMENT: '^' . ID '=' EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 83
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 84
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 48

   37 EXPRASION: '&' . EXPRASION
   52 STASTMENT: '&' . ID '=' EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 85
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 86
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 49

   19 EXPRASION: '-' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 87
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 50

   17 EXPRASION: '(' . EXPRASION ')'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 88
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 51

   56 COMPUND_STATMENT_PROC: '{' '}' .

    $default  reduce using rule 56 (COMPUND_STATMENT_PROC)


State 52

   35 EXPRASION: '|' . EXPRASION '|'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 89
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 53

   64 NEW_DECLARE: DEF_A .

    $default  reduce using rule 64 (NEW_DECLARE)


State 54

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   47 STASTMENT: EXPRASION . ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 96
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 55

   34 EXPRASION: FUNC_ACTIVE .

    $default  reduce using rule 34 (EXPRASION)


State 56

   42 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   58 INNER_COMPUND_STATMENT: STASTMENT_LIST .

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    $default  reduce using rule 58 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 103
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 57

   48 STASTMENT: IF_STASTMENT .

    $default  reduce using rule 48 (STASTMENT)


State 58

   43 STASTMENT_LIST: STASTMENT .

    $default  reduce using rule 43 (STASTMENT_LIST)


State 59

   49 STASTMENT: LOOP_STATMENT .

    $default  reduce using rule 49 (STASTMENT)


State 60

   46 STASTMENT: COMPUND_STATMENT_PROC .

    $default  reduce using rule 46 (STASTMENT)


State 61

   57 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT . '}'

    '}'  shift, and go to state 104


State 62

   59 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK .
   60                       | DEC_INNER_BLOCK . STASTMENT_LIST

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    $default  reduce using rule 59 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    STASTMENT_LIST         go to state 105
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 58
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 63

   61 DEC_INNER_BLOCK: NEW_DECLARE . DEC_INNER_BLOCK
   62                | NEW_DECLARE .

    VAR   shift, and go to state 38
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 62 (DEC_INNER_BLOCK)

    DEF_A            go to state 53
    PROC_DEF         go to state 6
    FUNC_DEF         go to state 7
    DEC_INNER_BLOCK  go to state 106
    NEW_DECLARE      go to state 63
    VF               go to state 64


State 64

   63 NEW_DECLARE: VF .

    $default  reduce using rule 63 (NEW_DECLARE)


State 65

   16 EXPRASION: CONST .

    $default  reduce using rule 16 (EXPRASION)


State 66

   13 INNER_ARGS: ID ',' INNER_ARGS .

    $default  reduce using rule 13 (INNER_ARGS)


State 67

   10 OUT_ARGES: INNER_ARGS ':' TYPE .
   11          | INNER_ARGS ':' TYPE . ';' OUT_ARGES

    ';'  shift, and go to state 107

    $default  reduce using rule 10 (OUT_ARGES)


State 68

   74 TYPE: STRING '[' . INT_NUM ']'

    INT_NUM  shift, and go to state 108


State 69

   14 FUNC_BLOCK: '{' . RETURN EXPRASION ';' '}'
   15           | '{' . INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    RETURN        shift, and go to state 109
    VAR           shift, and go to state 38
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    DEF_A                   go to state 53
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 54
    FUNC_ACTIVE             go to state 55
    STASTMENT_LIST          go to state 56
    IF_STASTMENT            go to state 57
    STASTMENT               go to state 58
    LOOP_STATMENT           go to state 59
    COMPUND_STATMENT_PROC   go to state 60
    INNER_COMPUND_STATMENT  go to state 110
    DEC_INNER_BLOCK         go to state 62
    NEW_DECLARE             go to state 63
    VF                      go to state 64
    CONST                   go to state 65


State 70

    7 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK .

    $default  reduce using rule 7 (FUNC_DEF)


State 71

   44 IF_STASTMENT: IF '(' . EXPRASION ')' STASTMENT ELSE STASTMENT
   45             | IF '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 111
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 72

   55 LOOP_STATMENT: FOR '(' . EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 112
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 73

   54 LOOP_STATMENT: WHILE '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 113
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 74

   66 VFDEC: INNER_ARGS . ':' TYPE ';'

    ':'  shift, and go to state 114


State 75

   65 VF: VAR VFDEC .

    $default  reduce using rule 65 (VF)


State 76

   38 FUNC_ACTIVE: ID '(' . ')'
   39            | ID '(' . FUNC_ACTIVE_INNER_ARGES ')'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    ')'           shift, and go to state 115
    '|'           shift, and go to state 52

    EXPRASION                go to state 116
    FUNC_ACTIVE              go to state 55
    FUNC_ACTIVE_INNER_ARGES  go to state 117
    CONST                    go to state 65


State 77

   21 EXPRASION: ID '[' . EXPRASION ']'
   51 STASTMENT: ID '[' . EXPRASION ']' '=' EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 118
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 78

   50 STASTMENT: ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 119
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 79

   18 EXPRASION: ID .
   21          | ID . '[' EXPRASION ']'
   38 FUNC_ACTIVE: ID . '(' ')'
   39            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'

    '('  shift, and go to state 76
    '['  shift, and go to state 120

    $default  reduce using rule 18 (EXPRASION)


State 80

   36 EXPRASION: '^' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 84
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 81

   37 EXPRASION: '&' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 86
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 82

   20 EXPRASION: '!' EXPRASION .
   22          | EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 20 (EXPRASION)


State 83

   18 EXPRASION: ID .
   21          | ID . '[' EXPRASION ']'
   38 FUNC_ACTIVE: ID . '(' ')'
   39            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   53 STASTMENT: '^' ID . '=' EXPRASION ';'

    '('  shift, and go to state 76
    '['  shift, and go to state 120
    '='  shift, and go to state 121

    $default  reduce using rule 18 (EXPRASION)


State 84

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   36          | '^' EXPRASION .

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 36 (EXPRASION)


State 85

   18 EXPRASION: ID .
   21          | ID . '[' EXPRASION ']'
   38 FUNC_ACTIVE: ID . '(' ')'
   39            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   52 STASTMENT: '&' ID . '=' EXPRASION ';'

    '('  shift, and go to state 76
    '['  shift, and go to state 120
    '='  shift, and go to state 122

    $default  reduce using rule 18 (EXPRASION)


State 86

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   37          | '&' EXPRASION .

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 37 (EXPRASION)


State 87

   19 EXPRASION: '-' EXPRASION .
   22          | EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 19 (EXPRASION)


State 88

   17 EXPRASION: '(' EXPRASION . ')'
   22          | EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ')'     shift, and go to state 123


State 89

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   35          | '|' EXPRASION . '|'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    '|'     shift, and go to state 124


State 90

   23 EXPRASION: EXPRASION AND_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 125
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 91

   30 EXPRASION: EXPRASION GE_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 126
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 92

   31 EXPRASION: EXPRASION SE_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 127
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 93

   22 EXPRASION: EXPRASION NE_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 128
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 94

   24 EXPRASION: EXPRASION OR_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 129
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 95

   29 EXPRASION: EXPRASION EQL_OP . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 130
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 96

   47 STASTMENT: EXPRASION ';' .

    $default  reduce using rule 47 (STASTMENT)


State 97

   32 EXPRASION: EXPRASION '>' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 131
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 98

   33 EXPRASION: EXPRASION '<' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 132
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 99

   25 EXPRASION: EXPRASION '+' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 133
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 100

   26 EXPRASION: EXPRASION '-' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 134
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 101

   28 EXPRASION: EXPRASION '*' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 135
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 102

   27 EXPRASION: EXPRASION '/' . EXPRASION

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 136
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 103

   42 STASTMENT_LIST: STASTMENT_LIST STASTMENT .

    $default  reduce using rule 42 (STASTMENT_LIST)


State 104

   57 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT '}' .

    $default  reduce using rule 57 (COMPUND_STATMENT_PROC)


State 105

   42 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   60 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK STASTMENT_LIST .

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    $default  reduce using rule 60 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 103
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 106

   61 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK .

    $default  reduce using rule 61 (DEC_INNER_BLOCK)


State 107

   11 OUT_ARGES: INNER_ARGS ':' TYPE ';' . OUT_ARGES

    ID  shift, and go to state 15

    OUT_ARGES   go to state 137
    INNER_ARGS  go to state 18


State 108

   74 TYPE: STRING '[' INT_NUM . ']'

    ']'  shift, and go to state 138


State 109

   14 FUNC_BLOCK: '{' RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 139
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 110

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT . RETURN EXPRASION ';' '}'

    RETURN  shift, and go to state 140


State 111

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   44 IF_STASTMENT: IF '(' EXPRASION . ')' STASTMENT ELSE STASTMENT
   45             | IF '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ')'     shift, and go to state 141


State 112

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   55 LOOP_STATMENT: FOR '(' EXPRASION . ';' EXPRASION ';' EXPRASION ')' STASTMENT

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 142
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 113

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   54 LOOP_STATMENT: WHILE '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ')'     shift, and go to state 143


State 114

   66 VFDEC: INNER_ARGS ':' . TYPE ';'

    CHAR          shift, and go to state 25
    REAL          shift, and go to state 26
    INT           shift, and go to state 27
    BOOL          shift, and go to state 28
    STRING        shift, and go to state 29
    CHAR_POINTER  shift, and go to state 30
    REAL_POINTER  shift, and go to state 31
    INT_POINTER   shift, and go to state 32

    TYPE  go to state 144


State 115

   38 FUNC_ACTIVE: ID '(' ')' .

    $default  reduce using rule 38 (FUNC_ACTIVE)


State 116

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   40 FUNC_ACTIVE_INNER_ARGES: EXPRASION .
   41                        | EXPRASION . ',' FUNC_ACTIVE_INNER_ARGES

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ','     shift, and go to state 145

    $default  reduce using rule 40 (FUNC_ACTIVE_INNER_ARGES)


State 117

   39 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES . ')'

    ')'  shift, and go to state 146


State 118

   21 EXPRASION: ID '[' EXPRASION . ']'
   22          | EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   51 STASTMENT: ID '[' EXPRASION . ']' '=' EXPRASION ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ']'     shift, and go to state 147


State 119

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   50 STASTMENT: ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 148
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 120

   21 EXPRASION: ID '[' . EXPRASION ']'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 149
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 121

   53 STASTMENT: '^' ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 150
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 122

   52 STASTMENT: '&' ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 151
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 123

   17 EXPRASION: '(' EXPRASION ')' .

    $default  reduce using rule 17 (EXPRASION)


State 124

   35 EXPRASION: '|' EXPRASION '|' .

    $default  reduce using rule 35 (EXPRASION)


State 125

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   23          | EXPRASION AND_OP EXPRASION .
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102

    $default  reduce using rule 23 (EXPRASION)


State 126

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   30          | EXPRASION GE_OP EXPRASION .
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 30 (EXPRASION)


State 127

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   31          | EXPRASION SE_OP EXPRASION .
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 31 (EXPRASION)


State 128

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   22          | EXPRASION NE_OP EXPRASION .
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 22 (EXPRASION)


State 129

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   24          | EXPRASION OR_OP EXPRASION .
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102

    $default  reduce using rule 24 (EXPRASION)


State 130

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   29          | EXPRASION EQL_OP EXPRASION .
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 29 (EXPRASION)


State 131

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   32          | EXPRASION '>' EXPRASION .
   33          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 32 (EXPRASION)


State 132

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   33          | EXPRASION '<' EXPRASION .

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 33 (EXPRASION)


State 133

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   25          | EXPRASION '+' EXPRASION .
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 25 (EXPRASION)


State 134

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   26          | EXPRASION '-' EXPRASION .
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 26 (EXPRASION)


State 135

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   28          | EXPRASION '*' EXPRASION .
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    $default  reduce using rule 28 (EXPRASION)


State 136

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   27          | EXPRASION '/' EXPRASION .
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    $default  reduce using rule 27 (EXPRASION)


State 137

   11 OUT_ARGES: INNER_ARGS ':' TYPE ';' OUT_ARGES .

    $default  reduce using rule 11 (OUT_ARGES)


State 138

   74 TYPE: STRING '[' INT_NUM ']' .

    $default  reduce using rule 74 (TYPE)


State 139

   14 FUNC_BLOCK: '{' RETURN EXPRASION . ';' '}'
   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 152
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 140

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 153
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 141

   44 IF_STASTMENT: IF '(' EXPRASION ')' . STASTMENT ELSE STASTMENT
   45             | IF '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 154
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 142

   55 LOOP_STATMENT: FOR '(' EXPRASION ';' . EXPRASION ';' EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 155
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 143

   54 LOOP_STATMENT: WHILE '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 156
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 144

   66 VFDEC: INNER_ARGS ':' TYPE . ';'

    ';'  shift, and go to state 157


State 145

   41 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' . FUNC_ACTIVE_INNER_ARGES

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION                go to state 116
    FUNC_ACTIVE              go to state 55
    FUNC_ACTIVE_INNER_ARGES  go to state 158
    CONST                    go to state 65


State 146

   39 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES ')' .

    $default  reduce using rule 39 (FUNC_ACTIVE)


State 147

   21 EXPRASION: ID '[' EXPRASION ']' .
   51 STASTMENT: ID '[' EXPRASION ']' . '=' EXPRASION ';'

    '='  shift, and go to state 159

    $default  reduce using rule 21 (EXPRASION)


State 148

   50 STASTMENT: ID '=' EXPRASION ';' .

    $default  reduce using rule 50 (STASTMENT)


State 149

   21 EXPRASION: ID '[' EXPRASION . ']'
   22          | EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ']'     shift, and go to state 160


State 150

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   53 STASTMENT: '^' ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 161
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 151

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   52 STASTMENT: '&' ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 162
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 152

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 163


State 153

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION . ';' '}'
   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 164
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 154

   44 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT . ELSE STASTMENT
   45             | IF '(' EXPRASION ')' STASTMENT .

    ELSE  shift, and go to state 165

    $default  reduce using rule 45 (IF_STASTMENT)


State 155

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   55 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION . ';' EXPRASION ')' STASTMENT

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 166
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 156

   54 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT .

    $default  reduce using rule 54 (LOOP_STATMENT)


State 157

   66 VFDEC: INNER_ARGS ':' TYPE ';' .

    $default  reduce using rule 66 (VFDEC)


State 158

   41 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' FUNC_ACTIVE_INNER_ARGES .

    $default  reduce using rule 41 (FUNC_ACTIVE_INNER_ARGES)


State 159

   51 STASTMENT: ID '[' EXPRASION ']' '=' . EXPRASION ';'

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 167
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 160

   21 EXPRASION: ID '[' EXPRASION ']' .

    $default  reduce using rule 21 (EXPRASION)


State 161

   53 STASTMENT: '^' ID '=' EXPRASION ';' .

    $default  reduce using rule 53 (STASTMENT)


State 162

   52 STASTMENT: '&' ID '=' EXPRASION ';' .

    $default  reduce using rule 52 (STASTMENT)


State 163

   14 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}' .

    $default  reduce using rule 14 (FUNC_BLOCK)


State 164

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 168


State 165

   44 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 169
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 166

   55 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 34
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 79
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 80
    '&'           shift, and go to state 81
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '|'           shift, and go to state 52

    EXPRASION    go to state 170
    FUNC_ACTIVE  go to state 55
    CONST        go to state 65


State 167

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   51 STASTMENT: ID '[' EXPRASION ']' '=' EXPRASION . ';'

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    ';'     shift, and go to state 171
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102


State 168

   15 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}' .

    $default  reduce using rule 15 (FUNC_BLOCK)


State 169

   44 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT .

    $default  reduce using rule 44 (IF_STASTMENT)


State 170

   22 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION . '+' EXPRASION
   26          | EXPRASION . '-' EXPRASION
   27          | EXPRASION . '/' EXPRASION
   28          | EXPRASION . '*' EXPRASION
   29          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION . '>' EXPRASION
   33          | EXPRASION . '<' EXPRASION
   55 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 90
    GE_OP   shift, and go to state 91
    SE_OP   shift, and go to state 92
    NE_OP   shift, and go to state 93
    OR_OP   shift, and go to state 94
    EQL_OP  shift, and go to state 95
    '>'     shift, and go to state 97
    '<'     shift, and go to state 98
    '+'     shift, and go to state 99
    '-'     shift, and go to state 100
    '*'     shift, and go to state 101
    '/'     shift, and go to state 102
    ')'     shift, and go to state 172


State 171

   51 STASTMENT: ID '[' EXPRASION ']' '=' EXPRASION ';' .

    $default  reduce using rule 51 (STASTMENT)


State 172

   55 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    WHILE         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 39
    STRING_VALUE  shift, and go to state 40
    INT_NUM       shift, and go to state 41
    R_NUM         shift, and go to state 42
    HEX_NUM       shift, and go to state 43
    ID            shift, and go to state 44
    BOOL_VAL      shift, and go to state 45
    '!'           shift, and go to state 46
    '^'           shift, and go to state 47
    '&'           shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 20
    '|'           shift, and go to state 52

    EXPRASION              go to state 54
    FUNC_ACTIVE            go to state 55
    IF_STASTMENT           go to state 57
    STASTMENT              go to state 173
    LOOP_STATMENT          go to state 59
    COMPUND_STATMENT_PROC  go to state 60
    CONST                  go to state 65


State 173

   55 LOOP_STATMENT: FOR '(' EXPRASION ';' EXPRASION ';' EXPRASION ')' STASTMENT .

    $default  reduce using rule 55 (LOOP_STATMENT)
