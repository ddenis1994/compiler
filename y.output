Grammar

    0 $accept: S $end

    1 S: FUNC_PROC_DEC MAIN_DEF

    2 FUNC_PROC_DEC: DEF_A
    3              | FUNC_PROC_DEC DEF_A

    4 DEF_A: FUNC_DEF
    5      | PROC_DEF

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC

    7 MAIN_DEF: PROC MAIN '(' ')' COMPUND_STATMENT_PROC

    8 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK

    9 ARGES: '(' ')'
   10      | '(' OUT_ARGES ')'

   11 OUT_ARGES: INNER_ARGS ':' TYPE
   12          | INNER_ARGS ':' TYPE ';' OUT_ARGES

   13 INNER_ARGS: ID
   14           | ID ',' INNER_ARGS

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}'
   16           | '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

   17 EXPRASION: CONST
   18          | '(' EXPRASION ')'
   19          | ID
   20          | '-' EXPRASION
   21          | '!' EXPRASION
   22          | ID '[' EXPRASION ']'
   23          | EXPRASION NE_OP EXPRASION
   24          | EXPRASION AND_OP EXPRASION
   25          | EXPRASION OR_OP EXPRASION
   26          | EXPRASION '+' EXPRASION
   27          | EXPRASION '-' EXPRASION
   28          | EXPRASION '/' EXPRASION
   29          | EXPRASION '*' EXPRASION
   30          | EXPRASION EQL_OP EXPRASION
   31          | EXPRASION GE_OP EXPRASION
   32          | EXPRASION SE_OP EXPRASION
   33          | EXPRASION '>' EXPRASION
   34          | EXPRASION '<' EXPRASION
   35          | FUNC_ACTIVE
   36          | '|' EXPRASION '|'
   37          | '^' EXPRASION
   38          | '&' EXPRASION

   39 FUNC_ACTIVE: ID '(' ')'
   40            | ID '(' FUNC_ACTIVE_INNER_ARGES ')'

   41 FUNC_ACTIVE_INNER_ARGES: EXPRASION
   42                        | EXPRASION ',' FUNC_ACTIVE_INNER_ARGES

   43 STASTMENT_LIST: STASTMENT_LIST STASTMENT
   44               | STASTMENT

   45 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   46             | IF '(' EXPRASION ')' STASTMENT

   47 STASTMENT: COMPUND_STATMENT_PROC
   48          | EXPRASION ';'
   49          | IF_STASTMENT
   50          | LOOP_STATMENT
   51          | ID '=' EXPRASION ';'
   52          | ID '[' EXPRASION ']' '=' EXPRASION ';'
   53          | '&' ID '=' EXPRASION ';'
   54          | '^' ID '=' EXPRASION ';'

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT
   56              | FOR '(' IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION ')' STASTMENT

   57 IF_EXPRASION: ID '=' EXPRASION

   58 COMPUND_STATMENT_PROC: '{' '}'
   59                      | '{' INNER_COMPUND_STATMENT '}'

   60 INNER_COMPUND_STATMENT: STASTMENT_LIST
   61                       | DEC_INNER_BLOCK
   62                       | DEC_INNER_BLOCK STASTMENT_LIST

   63 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK
   64                | NEW_DECLARE

   65 NEW_DECLARE: VF
   66            | DEF_A

   67 VF: VAR VFDEC

   68 VFDEC: INNER_ARGS ':' TYPE ';'
   69      | INNER_ARGS ':' STRING '[' INT_NUM ']' ';'

   70 CONST: INT_NUM
   71      | R_NUM
   72      | HEX_NUM
   73      | NULLA
   74      | CHAR_VALUE
   75      | STRING_VALUE
   76      | BOOL_VAL

   77 TYPE: BOOL
   78     | INT
   79     | REAL
   80     | CHAR
   81     | CHAR_POINTER
   82     | REAL_POINTER
   83     | INT_POINTER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 21
'&' (38) 38 53
'(' (40) 7 9 10 18 39 40 45 46 55 56
')' (41) 7 9 10 18 39 40 45 46 55 56
'*' (42) 29
'+' (43) 26
',' (44) 14 42
'-' (45) 20 27
'/' (47) 28
':' (58) 11 12 68 69
';' (59) 12 15 16 48 51 52 53 54 56 68 69
'<' (60) 34
'=' (61) 51 52 53 54 57
'>' (62) 33
'[' (91) 22 52 69
']' (93) 22 52 69
'^' (94) 37 54
'{' (123) 15 16 58 59
'|' (124) 36
'}' (125) 15 16 58 59
error (256)
CHAR <String> (258) 80
REAL <String> (259) 79
INT <String> (260) 78
BOOL <String> (261) 77
STRING <String> (262) 69
CHAR_POINTER <String> (263) 81
REAL_POINTER <String> (264) 82
INT_POINTER <String> (265) 83
NULLA <String> (266) 73
ELSE (267) 45
IF (268) 45 46
FOR (269) 56
WHILE (270) 55
RETURN (271) 8 15 16
VAR <String> (272) 67
FUNC <String> (273) 8
PROC <String> (274) 6 7
MAIN <String> (275) 7
AND_OP (276) 24
GE_OP (277) 31
SE_OP (278) 32
NE_OP (279) 23
OR_OP (280) 25
EQL_OP (281) 30
CHAR_VALUE <String> (282) 74
STRING_VALUE <String> (283) 75
INT_NUM <String> (284) 69 70
R_NUM <String> (285) 71
HEX_NUM <String> (286) 72
ID <String> (287) 6 8 13 14 19 22 39 40 51 52 53 54 57
BOOL_VAL <String> (288) 76
IFX (289)
UMINUS (290)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
S <Node> (57)
    on left: 1, on right: 0
FUNC_PROC_DEC <Node> (58)
    on left: 2 3, on right: 1 3
DEF_A <Node> (59)
    on left: 4 5, on right: 2 3 66
PROC_DEF <Node> (60)
    on left: 6, on right: 5
MAIN_DEF <Node> (61)
    on left: 7, on right: 1
FUNC_DEF <Node> (62)
    on left: 8, on right: 4
ARGES <Node> (63)
    on left: 9 10, on right: 6 8
OUT_ARGES <Node> (64)
    on left: 11 12, on right: 10 12
INNER_ARGS <Node> (65)
    on left: 13 14, on right: 11 12 14 68 69
FUNC_BLOCK <Node> (66)
    on left: 15 16, on right: 8
EXPRASION <Node> (67)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38, on right: 15 16 18 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 36 37 38 41 42 45 46 48 51 52 53 54 55 56 57
FUNC_ACTIVE <Node> (68)
    on left: 39 40, on right: 35
FUNC_ACTIVE_INNER_ARGES <Node> (69)
    on left: 41 42, on right: 40 42
STASTMENT_LIST <Node> (70)
    on left: 43 44, on right: 43 60 62
IF_STASTMENT <Node> (71)
    on left: 45 46, on right: 49
STASTMENT <Node> (72)
    on left: 47 48 49 50 51 52 53 54, on right: 43 44 45 46 55 56
LOOP_STATMENT <Node> (73)
    on left: 55 56, on right: 50
IF_EXPRASION <Node> (74)
    on left: 57, on right: 56
COMPUND_STATMENT_PROC <Node> (75)
    on left: 58 59, on right: 6 7 47
INNER_COMPUND_STATMENT <Node> (76)
    on left: 60 61 62, on right: 16 59
DEC_INNER_BLOCK <Node> (77)
    on left: 63 64, on right: 61 62 63
NEW_DECLARE <Node> (78)
    on left: 65 66, on right: 63 64
VF <Node> (79)
    on left: 67, on right: 65
VFDEC <Node> (80)
    on left: 68 69, on right: 67
CONST <Node> (81)
    on left: 70 71 72 73 74 75 76, on right: 17
TYPE <String> (82)
    on left: 77 78 79 80 81 82 83, on right: 8 11 12 68


State 0

    0 $accept: . S $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    S              go to state 3
    FUNC_PROC_DEC  go to state 4
    DEF_A          go to state 5
    PROC_DEF       go to state 6
    FUNC_DEF       go to state 7


State 1

    8 FUNC_DEF: FUNC . ID ARGES RETURN TYPE FUNC_BLOCK

    ID  shift, and go to state 8


State 2

    6 PROC_DEF: PROC . ID ARGES COMPUND_STATMENT_PROC

    ID  shift, and go to state 9


State 3

    0 $accept: S . $end

    $end  shift, and go to state 10


State 4

    1 S: FUNC_PROC_DEC . MAIN_DEF
    3 FUNC_PROC_DEC: FUNC_PROC_DEC . DEF_A

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 11

    DEF_A     go to state 12
    PROC_DEF  go to state 6
    MAIN_DEF  go to state 13
    FUNC_DEF  go to state 7


State 5

    2 FUNC_PROC_DEC: DEF_A .

    $default  reduce using rule 2 (FUNC_PROC_DEC)


State 6

    5 DEF_A: PROC_DEF .

    $default  reduce using rule 5 (DEF_A)


State 7

    4 DEF_A: FUNC_DEF .

    $default  reduce using rule 4 (DEF_A)


State 8

    8 FUNC_DEF: FUNC ID . ARGES RETURN TYPE FUNC_BLOCK

    '('  shift, and go to state 14

    ARGES  go to state 15


State 9

    6 PROC_DEF: PROC ID . ARGES COMPUND_STATMENT_PROC

    '('  shift, and go to state 14

    ARGES  go to state 16


State 10

    0 $accept: S $end .

    $default  accept


State 11

    6 PROC_DEF: PROC . ID ARGES COMPUND_STATMENT_PROC
    7 MAIN_DEF: PROC . MAIN '(' ')' COMPUND_STATMENT_PROC

    MAIN  shift, and go to state 17
    ID    shift, and go to state 9


State 12

    3 FUNC_PROC_DEC: FUNC_PROC_DEC DEF_A .

    $default  reduce using rule 3 (FUNC_PROC_DEC)


State 13

    1 S: FUNC_PROC_DEC MAIN_DEF .

    $default  reduce using rule 1 (S)


State 14

    9 ARGES: '(' . ')'
   10      | '(' . OUT_ARGES ')'

    ID   shift, and go to state 18
    ')'  shift, and go to state 19

    OUT_ARGES   go to state 20
    INNER_ARGS  go to state 21


State 15

    8 FUNC_DEF: FUNC ID ARGES . RETURN TYPE FUNC_BLOCK

    RETURN  shift, and go to state 22


State 16

    6 PROC_DEF: PROC ID ARGES . COMPUND_STATMENT_PROC

    '{'  shift, and go to state 23

    COMPUND_STATMENT_PROC  go to state 24


State 17

    7 MAIN_DEF: PROC MAIN . '(' ')' COMPUND_STATMENT_PROC

    '('  shift, and go to state 25


State 18

   13 INNER_ARGS: ID .
   14           | ID . ',' INNER_ARGS

    ','  shift, and go to state 26

    $default  reduce using rule 13 (INNER_ARGS)


State 19

    9 ARGES: '(' ')' .

    $default  reduce using rule 9 (ARGES)


State 20

   10 ARGES: '(' OUT_ARGES . ')'

    ')'  shift, and go to state 27


State 21

   11 OUT_ARGES: INNER_ARGS . ':' TYPE
   12          | INNER_ARGS . ':' TYPE ';' OUT_ARGES

    ':'  shift, and go to state 28


State 22

    8 FUNC_DEF: FUNC ID ARGES RETURN . TYPE FUNC_BLOCK

    CHAR          shift, and go to state 29
    REAL          shift, and go to state 30
    INT           shift, and go to state 31
    BOOL          shift, and go to state 32
    CHAR_POINTER  shift, and go to state 33
    REAL_POINTER  shift, and go to state 34
    INT_POINTER   shift, and go to state 35

    TYPE  go to state 36


State 23

   58 COMPUND_STATMENT_PROC: '{' . '}'
   59                      | '{' . INNER_COMPUND_STATMENT '}'

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    VAR           shift, and go to state 41
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '}'           shift, and go to state 54
    '|'           shift, and go to state 55

    DEF_A                   go to state 56
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 57
    FUNC_ACTIVE             go to state 58
    STASTMENT_LIST          go to state 59
    IF_STASTMENT            go to state 60
    STASTMENT               go to state 61
    LOOP_STATMENT           go to state 62
    COMPUND_STATMENT_PROC   go to state 63
    INNER_COMPUND_STATMENT  go to state 64
    DEC_INNER_BLOCK         go to state 65
    NEW_DECLARE             go to state 66
    VF                      go to state 67
    CONST                   go to state 68


State 24

    6 PROC_DEF: PROC ID ARGES COMPUND_STATMENT_PROC .

    $default  reduce using rule 6 (PROC_DEF)


State 25

    7 MAIN_DEF: PROC MAIN '(' . ')' COMPUND_STATMENT_PROC

    ')'  shift, and go to state 69


State 26

   14 INNER_ARGS: ID ',' . INNER_ARGS

    ID  shift, and go to state 18

    INNER_ARGS  go to state 70


State 27

   10 ARGES: '(' OUT_ARGES ')' .

    $default  reduce using rule 10 (ARGES)


State 28

   11 OUT_ARGES: INNER_ARGS ':' . TYPE
   12          | INNER_ARGS ':' . TYPE ';' OUT_ARGES

    CHAR          shift, and go to state 29
    REAL          shift, and go to state 30
    INT           shift, and go to state 31
    BOOL          shift, and go to state 32
    CHAR_POINTER  shift, and go to state 33
    REAL_POINTER  shift, and go to state 34
    INT_POINTER   shift, and go to state 35

    TYPE  go to state 71


State 29

   80 TYPE: CHAR .

    $default  reduce using rule 80 (TYPE)


State 30

   79 TYPE: REAL .

    $default  reduce using rule 79 (TYPE)


State 31

   78 TYPE: INT .

    $default  reduce using rule 78 (TYPE)


State 32

   77 TYPE: BOOL .

    $default  reduce using rule 77 (TYPE)


State 33

   81 TYPE: CHAR_POINTER .

    $default  reduce using rule 81 (TYPE)


State 34

   82 TYPE: REAL_POINTER .

    $default  reduce using rule 82 (TYPE)


State 35

   83 TYPE: INT_POINTER .

    $default  reduce using rule 83 (TYPE)


State 36

    8 FUNC_DEF: FUNC ID ARGES RETURN TYPE . FUNC_BLOCK

    '{'  shift, and go to state 72

    FUNC_BLOCK  go to state 73


State 37

   73 CONST: NULLA .

    $default  reduce using rule 73 (CONST)


State 38

   45 IF_STASTMENT: IF . '(' EXPRASION ')' STASTMENT ELSE STASTMENT
   46             | IF . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 74


State 39

   56 LOOP_STATMENT: FOR . '(' IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION ')' STASTMENT

    '('  shift, and go to state 75


State 40

   55 LOOP_STATMENT: WHILE . '(' EXPRASION ')' STASTMENT

    '('  shift, and go to state 76


State 41

   67 VF: VAR . VFDEC

    ID  shift, and go to state 18

    INNER_ARGS  go to state 77
    VFDEC       go to state 78


State 42

   74 CONST: CHAR_VALUE .

    $default  reduce using rule 74 (CONST)


State 43

   75 CONST: STRING_VALUE .

    $default  reduce using rule 75 (CONST)


State 44

   70 CONST: INT_NUM .

    $default  reduce using rule 70 (CONST)


State 45

   71 CONST: R_NUM .

    $default  reduce using rule 71 (CONST)


State 46

   72 CONST: HEX_NUM .

    $default  reduce using rule 72 (CONST)


State 47

   19 EXPRASION: ID .
   22          | ID . '[' EXPRASION ']'
   39 FUNC_ACTIVE: ID . '(' ')'
   40            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   51 STASTMENT: ID . '=' EXPRASION ';'
   52          | ID . '[' EXPRASION ']' '=' EXPRASION ';'

    '('  shift, and go to state 79
    '['  shift, and go to state 80
    '='  shift, and go to state 81

    $default  reduce using rule 19 (EXPRASION)


State 48

   76 CONST: BOOL_VAL .

    $default  reduce using rule 76 (CONST)


State 49

   21 EXPRASION: '!' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 85
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 50

   37 EXPRASION: '^' . EXPRASION
   54 STASTMENT: '^' . ID '=' EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 86
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 87
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 51

   38 EXPRASION: '&' . EXPRASION
   53 STASTMENT: '&' . ID '=' EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 88
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 89
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 52

   20 EXPRASION: '-' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 90
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 53

   18 EXPRASION: '(' . EXPRASION ')'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 91
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 54

   58 COMPUND_STATMENT_PROC: '{' '}' .

    $default  reduce using rule 58 (COMPUND_STATMENT_PROC)


State 55

   36 EXPRASION: '|' . EXPRASION '|'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 92
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 56

   66 NEW_DECLARE: DEF_A .

    $default  reduce using rule 66 (NEW_DECLARE)


State 57

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   48 STASTMENT: EXPRASION . ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 99
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 58

   35 EXPRASION: FUNC_ACTIVE .

    $default  reduce using rule 35 (EXPRASION)


State 59

   43 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   60 INNER_COMPUND_STATMENT: STASTMENT_LIST .

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    $default  reduce using rule 60 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 106
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 60

   49 STASTMENT: IF_STASTMENT .

    $default  reduce using rule 49 (STASTMENT)


State 61

   44 STASTMENT_LIST: STASTMENT .

    $default  reduce using rule 44 (STASTMENT_LIST)


State 62

   50 STASTMENT: LOOP_STATMENT .

    $default  reduce using rule 50 (STASTMENT)


State 63

   47 STASTMENT: COMPUND_STATMENT_PROC .

    $default  reduce using rule 47 (STASTMENT)


State 64

   59 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT . '}'

    '}'  shift, and go to state 107


State 65

   61 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK .
   62                       | DEC_INNER_BLOCK . STASTMENT_LIST

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    $default  reduce using rule 61 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    STASTMENT_LIST         go to state 108
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 61
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 66

   63 DEC_INNER_BLOCK: NEW_DECLARE . DEC_INNER_BLOCK
   64                | NEW_DECLARE .

    VAR   shift, and go to state 41
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2

    $default  reduce using rule 64 (DEC_INNER_BLOCK)

    DEF_A            go to state 56
    PROC_DEF         go to state 6
    FUNC_DEF         go to state 7
    DEC_INNER_BLOCK  go to state 109
    NEW_DECLARE      go to state 66
    VF               go to state 67


State 67

   65 NEW_DECLARE: VF .

    $default  reduce using rule 65 (NEW_DECLARE)


State 68

   17 EXPRASION: CONST .

    $default  reduce using rule 17 (EXPRASION)


State 69

    7 MAIN_DEF: PROC MAIN '(' ')' . COMPUND_STATMENT_PROC

    '{'  shift, and go to state 23

    COMPUND_STATMENT_PROC  go to state 110


State 70

   14 INNER_ARGS: ID ',' INNER_ARGS .

    $default  reduce using rule 14 (INNER_ARGS)


State 71

   11 OUT_ARGES: INNER_ARGS ':' TYPE .
   12          | INNER_ARGS ':' TYPE . ';' OUT_ARGES

    ';'  shift, and go to state 111

    $default  reduce using rule 11 (OUT_ARGES)


State 72

   15 FUNC_BLOCK: '{' . RETURN EXPRASION ';' '}'
   16           | '{' . INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}'

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    RETURN        shift, and go to state 112
    VAR           shift, and go to state 41
    FUNC          shift, and go to state 1
    PROC          shift, and go to state 2
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    DEF_A                   go to state 56
    PROC_DEF                go to state 6
    FUNC_DEF                go to state 7
    EXPRASION               go to state 57
    FUNC_ACTIVE             go to state 58
    STASTMENT_LIST          go to state 59
    IF_STASTMENT            go to state 60
    STASTMENT               go to state 61
    LOOP_STATMENT           go to state 62
    COMPUND_STATMENT_PROC   go to state 63
    INNER_COMPUND_STATMENT  go to state 113
    DEC_INNER_BLOCK         go to state 65
    NEW_DECLARE             go to state 66
    VF                      go to state 67
    CONST                   go to state 68


State 73

    8 FUNC_DEF: FUNC ID ARGES RETURN TYPE FUNC_BLOCK .

    $default  reduce using rule 8 (FUNC_DEF)


State 74

   45 IF_STASTMENT: IF '(' . EXPRASION ')' STASTMENT ELSE STASTMENT
   46             | IF '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 114
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 75

   56 LOOP_STATMENT: FOR '(' . IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION ')' STASTMENT

    ID  shift, and go to state 115

    IF_EXPRASION  go to state 116


State 76

   55 LOOP_STATMENT: WHILE '(' . EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 117
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 77

   68 VFDEC: INNER_ARGS . ':' TYPE ';'
   69      | INNER_ARGS . ':' STRING '[' INT_NUM ']' ';'

    ':'  shift, and go to state 118


State 78

   67 VF: VAR VFDEC .

    $default  reduce using rule 67 (VF)


State 79

   39 FUNC_ACTIVE: ID '(' . ')'
   40            | ID '(' . FUNC_ACTIVE_INNER_ARGES ')'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    ')'           shift, and go to state 119
    '|'           shift, and go to state 55

    EXPRASION                go to state 120
    FUNC_ACTIVE              go to state 58
    FUNC_ACTIVE_INNER_ARGES  go to state 121
    CONST                    go to state 68


State 80

   22 EXPRASION: ID '[' . EXPRASION ']'
   52 STASTMENT: ID '[' . EXPRASION ']' '=' EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 122
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 81

   51 STASTMENT: ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 123
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 82

   19 EXPRASION: ID .
   22          | ID . '[' EXPRASION ']'
   39 FUNC_ACTIVE: ID . '(' ')'
   40            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'

    '('  shift, and go to state 79
    '['  shift, and go to state 124

    $default  reduce using rule 19 (EXPRASION)


State 83

   37 EXPRASION: '^' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 87
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 84

   38 EXPRASION: '&' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 89
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 85

   21 EXPRASION: '!' EXPRASION .
   23          | EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 21 (EXPRASION)


State 86

   19 EXPRASION: ID .
   22          | ID . '[' EXPRASION ']'
   39 FUNC_ACTIVE: ID . '(' ')'
   40            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   54 STASTMENT: '^' ID . '=' EXPRASION ';'

    '('  shift, and go to state 79
    '['  shift, and go to state 124
    '='  shift, and go to state 125

    $default  reduce using rule 19 (EXPRASION)


State 87

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   37          | '^' EXPRASION .

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 37 (EXPRASION)


State 88

   19 EXPRASION: ID .
   22          | ID . '[' EXPRASION ']'
   39 FUNC_ACTIVE: ID . '(' ')'
   40            | ID . '(' FUNC_ACTIVE_INNER_ARGES ')'
   53 STASTMENT: '&' ID . '=' EXPRASION ';'

    '('  shift, and go to state 79
    '['  shift, and go to state 124
    '='  shift, and go to state 126

    $default  reduce using rule 19 (EXPRASION)


State 89

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   38          | '&' EXPRASION .

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 38 (EXPRASION)


State 90

   20 EXPRASION: '-' EXPRASION .
   23          | EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 20 (EXPRASION)


State 91

   18 EXPRASION: '(' EXPRASION . ')'
   23          | EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ')'     shift, and go to state 127


State 92

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   36          | '|' EXPRASION . '|'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '|'     shift, and go to state 128


State 93

   24 EXPRASION: EXPRASION AND_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 129
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 94

   31 EXPRASION: EXPRASION GE_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 130
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 95

   32 EXPRASION: EXPRASION SE_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 131
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 96

   23 EXPRASION: EXPRASION NE_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 132
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 97

   25 EXPRASION: EXPRASION OR_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 133
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 98

   30 EXPRASION: EXPRASION EQL_OP . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 134
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 99

   48 STASTMENT: EXPRASION ';' .

    $default  reduce using rule 48 (STASTMENT)


State 100

   33 EXPRASION: EXPRASION '>' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 135
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 101

   34 EXPRASION: EXPRASION '<' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 136
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 102

   26 EXPRASION: EXPRASION '+' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 137
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 103

   27 EXPRASION: EXPRASION '-' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 138
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 104

   29 EXPRASION: EXPRASION '*' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 139
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 105

   28 EXPRASION: EXPRASION '/' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 140
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 106

   43 STASTMENT_LIST: STASTMENT_LIST STASTMENT .

    $default  reduce using rule 43 (STASTMENT_LIST)


State 107

   59 COMPUND_STATMENT_PROC: '{' INNER_COMPUND_STATMENT '}' .

    $default  reduce using rule 59 (COMPUND_STATMENT_PROC)


State 108

   43 STASTMENT_LIST: STASTMENT_LIST . STASTMENT
   62 INNER_COMPUND_STATMENT: DEC_INNER_BLOCK STASTMENT_LIST .

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    $default  reduce using rule 62 (INNER_COMPUND_STATMENT)

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 106
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 109

   63 DEC_INNER_BLOCK: NEW_DECLARE DEC_INNER_BLOCK .

    $default  reduce using rule 63 (DEC_INNER_BLOCK)


State 110

    7 MAIN_DEF: PROC MAIN '(' ')' COMPUND_STATMENT_PROC .

    $default  reduce using rule 7 (MAIN_DEF)


State 111

   12 OUT_ARGES: INNER_ARGS ':' TYPE ';' . OUT_ARGES

    ID  shift, and go to state 18

    OUT_ARGES   go to state 141
    INNER_ARGS  go to state 21


State 112

   15 FUNC_BLOCK: '{' RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 142
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 113

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT . RETURN EXPRASION ';' '}'

    RETURN  shift, and go to state 143


State 114

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   45 IF_STASTMENT: IF '(' EXPRASION . ')' STASTMENT ELSE STASTMENT
   46             | IF '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ')'     shift, and go to state 144


State 115

   57 IF_EXPRASION: ID . '=' EXPRASION

    '='  shift, and go to state 145


State 116

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION . ';' EXPRASION ';' IF_EXPRASION ')' STASTMENT

    ';'  shift, and go to state 146


State 117

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   55 LOOP_STATMENT: WHILE '(' EXPRASION . ')' STASTMENT

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ')'     shift, and go to state 147


State 118

   68 VFDEC: INNER_ARGS ':' . TYPE ';'
   69      | INNER_ARGS ':' . STRING '[' INT_NUM ']' ';'

    CHAR          shift, and go to state 29
    REAL          shift, and go to state 30
    INT           shift, and go to state 31
    BOOL          shift, and go to state 32
    STRING        shift, and go to state 148
    CHAR_POINTER  shift, and go to state 33
    REAL_POINTER  shift, and go to state 34
    INT_POINTER   shift, and go to state 35

    TYPE  go to state 149


State 119

   39 FUNC_ACTIVE: ID '(' ')' .

    $default  reduce using rule 39 (FUNC_ACTIVE)


State 120

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   41 FUNC_ACTIVE_INNER_ARGES: EXPRASION .
   42                        | EXPRASION . ',' FUNC_ACTIVE_INNER_ARGES

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ','     shift, and go to state 150

    $default  reduce using rule 41 (FUNC_ACTIVE_INNER_ARGES)


State 121

   40 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES . ')'

    ')'  shift, and go to state 151


State 122

   22 EXPRASION: ID '[' EXPRASION . ']'
   23          | EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   52 STASTMENT: ID '[' EXPRASION . ']' '=' EXPRASION ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ']'     shift, and go to state 152


State 123

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   51 STASTMENT: ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 153
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 124

   22 EXPRASION: ID '[' . EXPRASION ']'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 154
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 125

   54 STASTMENT: '^' ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 155
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 126

   53 STASTMENT: '&' ID '=' . EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 156
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 127

   18 EXPRASION: '(' EXPRASION ')' .

    $default  reduce using rule 18 (EXPRASION)


State 128

   36 EXPRASION: '|' EXPRASION '|' .

    $default  reduce using rule 36 (EXPRASION)


State 129

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   24          | EXPRASION AND_OP EXPRASION .
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105

    $default  reduce using rule 24 (EXPRASION)


State 130

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   31          | EXPRASION GE_OP EXPRASION .
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 31 (EXPRASION)


State 131

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   32          | EXPRASION SE_OP EXPRASION .
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 32 (EXPRASION)


State 132

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   23          | EXPRASION NE_OP EXPRASION .
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 23 (EXPRASION)


State 133

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   25          | EXPRASION OR_OP EXPRASION .
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105

    $default  reduce using rule 25 (EXPRASION)


State 134

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   30          | EXPRASION EQL_OP EXPRASION .
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 30 (EXPRASION)


State 135

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   33          | EXPRASION '>' EXPRASION .
   34          | EXPRASION . '<' EXPRASION

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 33 (EXPRASION)


State 136

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   34          | EXPRASION '<' EXPRASION .

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 34 (EXPRASION)


State 137

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   26          | EXPRASION '+' EXPRASION .
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 26 (EXPRASION)


State 138

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   27          | EXPRASION '-' EXPRASION .
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 27 (EXPRASION)


State 139

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   29          | EXPRASION '*' EXPRASION .
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    $default  reduce using rule 29 (EXPRASION)


State 140

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   28          | EXPRASION '/' EXPRASION .
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    $default  reduce using rule 28 (EXPRASION)


State 141

   12 OUT_ARGES: INNER_ARGS ':' TYPE ';' OUT_ARGES .

    $default  reduce using rule 12 (OUT_ARGES)


State 142

   15 FUNC_BLOCK: '{' RETURN EXPRASION . ';' '}'
   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 157
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 143

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN . EXPRASION ';' '}'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 158
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 144

   45 IF_STASTMENT: IF '(' EXPRASION ')' . STASTMENT ELSE STASTMENT
   46             | IF '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 159
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 145

   57 IF_EXPRASION: ID '=' . EXPRASION

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 160
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 146

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' . EXPRASION ';' IF_EXPRASION ')' STASTMENT

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 161
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 147

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 162
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 148

   69 VFDEC: INNER_ARGS ':' STRING . '[' INT_NUM ']' ';'

    '['  shift, and go to state 163


State 149

   68 VFDEC: INNER_ARGS ':' TYPE . ';'

    ';'  shift, and go to state 164


State 150

   42 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' . FUNC_ACTIVE_INNER_ARGES

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION                go to state 120
    FUNC_ACTIVE              go to state 58
    FUNC_ACTIVE_INNER_ARGES  go to state 165
    CONST                    go to state 68


State 151

   40 FUNC_ACTIVE: ID '(' FUNC_ACTIVE_INNER_ARGES ')' .

    $default  reduce using rule 40 (FUNC_ACTIVE)


State 152

   22 EXPRASION: ID '[' EXPRASION ']' .
   52 STASTMENT: ID '[' EXPRASION ']' . '=' EXPRASION ';'

    '='  shift, and go to state 166

    $default  reduce using rule 22 (EXPRASION)


State 153

   51 STASTMENT: ID '=' EXPRASION ';' .

    $default  reduce using rule 51 (STASTMENT)


State 154

   22 EXPRASION: ID '[' EXPRASION . ']'
   23          | EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    ']'     shift, and go to state 167


State 155

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   54 STASTMENT: '^' ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 168
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 156

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   53 STASTMENT: '&' ID '=' EXPRASION . ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 169
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 157

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 170


State 158

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION . ';' '}'
   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 171
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 159

   45 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT . ELSE STASTMENT
   46             | IF '(' EXPRASION ')' STASTMENT .

    ELSE  shift, and go to state 172

    $default  reduce using rule 46 (IF_STASTMENT)


State 160

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   57 IF_EXPRASION: ID '=' EXPRASION .

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105

    $default  reduce using rule 57 (IF_EXPRASION)


State 161

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' EXPRASION . ';' IF_EXPRASION ')' STASTMENT

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 173
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 162

   55 LOOP_STATMENT: WHILE '(' EXPRASION ')' STASTMENT .

    $default  reduce using rule 55 (LOOP_STATMENT)


State 163

   69 VFDEC: INNER_ARGS ':' STRING '[' . INT_NUM ']' ';'

    INT_NUM  shift, and go to state 174


State 164

   68 VFDEC: INNER_ARGS ':' TYPE ';' .

    $default  reduce using rule 68 (VFDEC)


State 165

   42 FUNC_ACTIVE_INNER_ARGES: EXPRASION ',' FUNC_ACTIVE_INNER_ARGES .

    $default  reduce using rule 42 (FUNC_ACTIVE_INNER_ARGES)


State 166

   52 STASTMENT: ID '[' EXPRASION ']' '=' . EXPRASION ';'

    NULLA         shift, and go to state 37
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 82
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 83
    '&'           shift, and go to state 84
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '|'           shift, and go to state 55

    EXPRASION    go to state 175
    FUNC_ACTIVE  go to state 58
    CONST        go to state 68


State 167

   22 EXPRASION: ID '[' EXPRASION ']' .

    $default  reduce using rule 22 (EXPRASION)


State 168

   54 STASTMENT: '^' ID '=' EXPRASION ';' .

    $default  reduce using rule 54 (STASTMENT)


State 169

   53 STASTMENT: '&' ID '=' EXPRASION ';' .

    $default  reduce using rule 53 (STASTMENT)


State 170

   15 FUNC_BLOCK: '{' RETURN EXPRASION ';' '}' .

    $default  reduce using rule 15 (FUNC_BLOCK)


State 171

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' . '}'

    '}'  shift, and go to state 176


State 172

   45 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE . STASTMENT

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 177
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 173

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' EXPRASION ';' . IF_EXPRASION ')' STASTMENT

    ID  shift, and go to state 115

    IF_EXPRASION  go to state 178


State 174

   69 VFDEC: INNER_ARGS ':' STRING '[' INT_NUM . ']' ';'

    ']'  shift, and go to state 179


State 175

   23 EXPRASION: EXPRASION . NE_OP EXPRASION
   24          | EXPRASION . AND_OP EXPRASION
   25          | EXPRASION . OR_OP EXPRASION
   26          | EXPRASION . '+' EXPRASION
   27          | EXPRASION . '-' EXPRASION
   28          | EXPRASION . '/' EXPRASION
   29          | EXPRASION . '*' EXPRASION
   30          | EXPRASION . EQL_OP EXPRASION
   31          | EXPRASION . GE_OP EXPRASION
   32          | EXPRASION . SE_OP EXPRASION
   33          | EXPRASION . '>' EXPRASION
   34          | EXPRASION . '<' EXPRASION
   52 STASTMENT: ID '[' EXPRASION ']' '=' EXPRASION . ';'

    AND_OP  shift, and go to state 93
    GE_OP   shift, and go to state 94
    SE_OP   shift, and go to state 95
    NE_OP   shift, and go to state 96
    OR_OP   shift, and go to state 97
    EQL_OP  shift, and go to state 98
    ';'     shift, and go to state 180
    '>'     shift, and go to state 100
    '<'     shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105


State 176

   16 FUNC_BLOCK: '{' INNER_COMPUND_STATMENT RETURN EXPRASION ';' '}' .

    $default  reduce using rule 16 (FUNC_BLOCK)


State 177

   45 IF_STASTMENT: IF '(' EXPRASION ')' STASTMENT ELSE STASTMENT .

    $default  reduce using rule 45 (IF_STASTMENT)


State 178

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION . ')' STASTMENT

    ')'  shift, and go to state 181


State 179

   69 VFDEC: INNER_ARGS ':' STRING '[' INT_NUM ']' . ';'

    ';'  shift, and go to state 182


State 180

   52 STASTMENT: ID '[' EXPRASION ']' '=' EXPRASION ';' .

    $default  reduce using rule 52 (STASTMENT)


State 181

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION ')' . STASTMENT

    NULLA         shift, and go to state 37
    IF            shift, and go to state 38
    FOR           shift, and go to state 39
    WHILE         shift, and go to state 40
    CHAR_VALUE    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43
    INT_NUM       shift, and go to state 44
    R_NUM         shift, and go to state 45
    HEX_NUM       shift, and go to state 46
    ID            shift, and go to state 47
    BOOL_VAL      shift, and go to state 48
    '!'           shift, and go to state 49
    '^'           shift, and go to state 50
    '&'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53
    '{'           shift, and go to state 23
    '|'           shift, and go to state 55

    EXPRASION              go to state 57
    FUNC_ACTIVE            go to state 58
    IF_STASTMENT           go to state 60
    STASTMENT              go to state 183
    LOOP_STATMENT          go to state 62
    COMPUND_STATMENT_PROC  go to state 63
    CONST                  go to state 68


State 182

   69 VFDEC: INNER_ARGS ':' STRING '[' INT_NUM ']' ';' .

    $default  reduce using rule 69 (VFDEC)


State 183

   56 LOOP_STATMENT: FOR '(' IF_EXPRASION ';' EXPRASION ';' IF_EXPRASION ')' STASTMENT .

    $default  reduce using rule 56 (LOOP_STATMENT)
